// Loadable modules
//
// Generated by ../../bin/vtkkwProcessXML-pv4.3
//
#ifndef __vtkSMXML_StreamingParticles_h
#define __vtkSMXML_StreamingParticles_h

#include <string.h>


// From file /home/marko/research/VeloView-master/build/paraview/src/paraview/Plugins/StreamingParticles/StreamingParticles.xml
static const char* const StreamingParticlesStreamingParticlesInterfaces0 =
"<ServerManagerConfiguration>\n"
"  <ProxyGroup name=\"representations\">\n"
"    <RepresentationProxy name=\"StreamingParticlesRepresentation\"\n"
"      class=\"vtkStreamingParticlesRepresentation\"\n"
"      processes=\"client|renderserver|dataserver\">\n"
"      <Documentation>\n"
"        This is the new representation type we are adding. This is identical to\n"
"        the SurfaceRepresentation except that we are overriding the mapper with\n"
"        our mapper.\n"
"      </Documentation>\n"
"      <InputProperty command=\"SetInputConnection\"\n"
"                     name=\"Input\">\n"
"        <DataTypeDomain composite_data_supported=\"1\"\n"
"                        name=\"input_type\">\n"
"          <DataType value=\"vtkDataSet\" />\n"
"        </DataTypeDomain>\n"
"        <InputArrayDomain attribute_type=\"any\"\n"
"                          name=\"input_array_any\">\n"
"        </InputArrayDomain>\n"
"        <Documentation>Set the input to the representation.</Documentation>\n"
"      </InputProperty>\n"
"      <IntVectorProperty command=\"SetUseOutline\"\n"
"                         default_values=\"0\"\n"
"                         name=\"UseOutline\"\n"
"                         number_of_elements=\"1\">\n"
"        <BooleanDomain name=\"bool\" />\n"
"      </IntVectorProperty>\n"
"      <IntVectorProperty command=\"SetUseBlockDetailInformation\"\n"
"                         default_values=\"0\"\n"
"                         name=\"UseBlockDetailInformation\"\n"
"                         number_of_elements=\"1\">\n"
"        <BooleanDomain name=\"bool\" />\n"
"      </IntVectorProperty>\n"
"      <IntVectorProperty command=\"SetProcessesCanLoadAnyBlock\"\n"
"                         default_values=\"1\"\n"
"                         name=\"ProcessesCanLoadAnyBlock\"\n"
"                         number_of_elements=\"1\">\n"
"        <BooleanDomain name=\"bool\" />\n"
"      </IntVectorProperty>\n"
"      <DoubleVectorProperty command=\"SetDetailLevelToLoad\"\n"
"                            default_values=\"2\"\n"
"                            name=\"DetailLevel\"\n"
"                            number_of_elements=\"1\">\n"
"        <DoubleRangeDomain min=\"0\"\n"
"                           max=\"5e-4\"\n"
"                           range=\"range\" />\n"
"      </DoubleVectorProperty>\n"
"      <IntVectorProperty command=\"SetStreamingRequestSize\"\n"
"                         default_values=\"1\"\n"
"                         name=\"StreamingRequestSize\"\n"
"                         number_of_elements=\"1\">\n"
"        <IntRangeDomain name=\"range\" min=\"1\" max=\"1000\" />\n"
"        <Documentation>\n"
"        Set the number of blocks to request at a given time on a single process\n"
"        when streaming.\n"
"        </Documentation>\n"
"      </IntVectorProperty>\n"
"      <DoubleVectorProperty command=\"SetPointSize\"\n"
"                            default_values=\"2.0\"\n"
"                            name=\"PointSize\"\n"
"                            number_of_elements=\"1\">\n"
"        <DoubleRangeDomain min=\"0\"\n"
"                           name=\"range\" />\n"
"      </DoubleVectorProperty>\n"
"      <StringVectorProperty command=\"SetInputArrayToProcess\"\n"
"                            element_types=\"0 0 0 0 2\"\n"
"                            name=\"ColorArrayName\"\n"
"                            number_of_elements=\"5\">\n"
"        <Documentation>\n"
"          Set the array to color with. One must specify the field association and\n"
"          the array name of the array. If the array is missing, scalar coloring will\n"
"          automatically be disabled.\n"
"        </Documentation>\n"
"        <RepresentedArrayListDomain name=\"array_list\"\n"
"                         input_domain_name=\"input_array_any\">\n"
"          <RequiredProperties>\n"
"            <Property function=\"Input\" name=\"Input\" />\n"
"          </RequiredProperties>\n"
"        </RepresentedArrayListDomain>\n"
"        <FieldDataDomain name=\"field_list\"\n"
"                         disable_update_domain_entries=\"1\"\n"
"                         force_point_cell_data=\"1\">\n"
"          <RequiredProperties>\n"
"            <Property function=\"Input\" name=\"Input\" />\n"
"          </RequiredProperties>\n"
"        </FieldDataDomain>\n"
"      </StringVectorProperty>\n"
"      <ProxyProperty command=\"SetLookupTable\"\n"
"                     name=\"LookupTable\"\n"
"                     skip_dependency=\"1\">\n"
"        <Documentation>Set the lookup-table to use to map data array to colors.\n"
"        Lookuptable is only used with MapScalars to ON.</Documentation>\n"
"        <ProxyGroupDomain name=\"groups\">\n"
"          <Group name=\"lookup_tables\" />\n"
"        </ProxyGroupDomain>\n"
"      </ProxyProperty>\n"
"      <DoubleVectorProperty command=\"SetOpacity\"\n"
"                            default_values=\"1.0\"\n"
"                            name=\"Opacity\"\n"
"                            number_of_elements=\"1\">\n"
"        <DoubleRangeDomain max=\"1\" min=\"0\" name=\"range\" />\n"
"      </DoubleVectorProperty>\n"
"    <!-- End of StreamingParticlesRepresentation -->\n"
"    </RepresentationProxy>\n"
"\n"
"    <Extension name=\"GeometryRepresentation\">\n"
"      <Documentation>\n"
"        Extends standard GeometryRepresentation by adding\n"
"        StreamingParticlesRepresentation as a new type of representation.\n"
"      </Documentation>\n"
"\n"
"      <!-- this adds to what is already defined in PVRepresentationBase -->\n"
"      <RepresentationType subproxy=\"StreamingParticlesRepresentation\"\n"
"        text=\"Streaming Particles\" />\n"
"\n"
"      <SubProxy>\n"
"        <Proxy name=\"StreamingParticlesRepresentation\"\n"
"          proxygroup=\"representations\" proxyname=\"StreamingParticlesRepresentation\">\n"
"        </Proxy>\n"
"        <ShareProperties subproxy=\"SurfaceRepresentation\">\n"
"          <Exception name=\"Input\" />\n"
"          <Exception name=\"Visibility\" />\n"
"        </ShareProperties>\n"
"        <ExposedProperties>\n"
"          <Property name=\"UseOutline\" />\n"
"          <Property name=\"UseBlockDetailInformation\" />\n"
"          <Property name=\"ProcessesCanLoadAnyBlock\" />\n"
"          <Property name=\"DetailLevel\" />\n"
"          <Property name=\"StreamingRequestSize\" />\n"
"        </ExposedProperties>\n"
"      </SubProxy>\n"
"    </Extension>\n"
"\n"
"    <Extension name=\"UnstructuredGridRepresentation\">\n"
"      <Documentation>\n"
"        Extends standard UnstructuredGridRepresentation by adding\n"
"        StreamingParticlesRepresentation as a new type of representation.\n"
"      </Documentation>\n"
"\n"
"      <!-- this adds to what is already defined in PVRepresentationBase -->\n"
"      <RepresentationType subproxy=\"StreamingParticlesRepresentation\"\n"
"        text=\"Streaming Particles\" />\n"
"\n"
"      <SubProxy>\n"
"        <Proxy name=\"StreamingParticlesRepresentation\"\n"
"          proxygroup=\"representations\" proxyname=\"StreamingParticlesRepresentation\">\n"
"        </Proxy>\n"
"        <ShareProperties subproxy=\"SurfaceRepresentation\">\n"
"          <Exception name=\"Input\" />\n"
"          <Exception name=\"Visibility\" />\n"
"        </ShareProperties>\n"
"        <ExposedProperties>\n"
"          <Property name=\"UseOutline\" />\n"
"          <Property name=\"UseBlockDetailInformation\" />\n"
"          <Property name=\"ProcessesCanLoadAnyBlock\" />\n"
"          <Property name=\"DetailLevel\" />\n"
"          <Property name=\"StreamingRequestSize\" />\n"
"        </ExposedProperties>\n"
"      </SubProxy>\n"
"    </Extension>\n"
"\n"
"  </ProxyGroup>\n"
"  <!-- ==================================================================== -->\n"
"  <ProxyGroup name=\"sources\">\n"
"    <SourceProxy class=\"vtkPVRandomPointsStreamingSource\" label=\"Random Streaming Points\"\n"
"                 name=\"RandomPoints\">\n"
"      <IntVectorProperty command=\"SetNumLevels\" default_values=\"5\"\n"
"                         number_of_elements=\"1\" name=\"NumberOfLevels\">\n"
"        <IntRangeDomain max=\"6\"\n"
"                        min=\"1\"\n"
"                        name=\"range\" />\n"
"        <Documentation>Set the number of levels in the octree of blocks\n"
"        </Documentation>\n"
"      </IntVectorProperty>\n"
"      <IntVectorProperty command=\"SetPointsPerBlock\" default_values=\"100\"\n"
"                         number_of_elements=\"1\" name=\"PointsPerBlock\">\n"
"        <Documentation>Set the number of points generated in each block\n"
"        </Documentation>\n"
"      </IntVectorProperty>\n"
"      <IntVectorProperty command=\"SetSeed\" default_values=\"1\"\n"
"                         number_of_elements=\"1\" name=\"Seed\">\n"
"        <Documentation>Set the seed of the random number generator\n"
"        </Documentation>\n"
"      </IntVectorProperty>\n"
"      <Documentation>This source creates random points in an octree of blocks to be\n"
"        used with the Streaming Particles representation</Documentation>\n"
"    </SourceProxy>\n"
"  </ProxyGroup>\n"
"\n"
"</ServerManagerConfiguration>\n"
"\n";
// Get single string
char* StreamingParticlesStreamingParticlesInterfaces()
{
  size_t len = ( 0
    + strlen(StreamingParticlesStreamingParticlesInterfaces0) );
  char* res = new char[ len + 1];
  res[0] = 0;
  strcat(res, StreamingParticlesStreamingParticlesInterfaces0);
  return res;
}



#endif
