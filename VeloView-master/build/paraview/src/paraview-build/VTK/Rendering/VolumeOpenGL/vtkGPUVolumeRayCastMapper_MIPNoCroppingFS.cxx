/* DO NOT EDIT.
 * Generated by ../../../bin/vtkEncodeString-pv4.3
 * 
 * Define the vtkGPUVolumeRayCastMapper_MIPNoCroppingFS string.
 *
 * Generated from file: /home/marko/research/VeloView-master/build/paraview/src/paraview/VTK/Rendering/VolumeOpenGL/vtkGPUVolumeRayCastMapper_MIPNoCroppingFS.glsl
 */
#include "vtkGPUVolumeRayCastMapper_MIPNoCroppingFS.h"
const char *vtkGPUVolumeRayCastMapper_MIPNoCroppingFS =
"/*=========================================================================\n"
"\n"
"  Program:   Visualization Toolkit\n"
"  Module:    vtkGPUVolumeRayCastMapper_MIPNoCroppingFS.glsl\n"
"\n"
"  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\n"
"  All rights reserved.\n"
"  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\n"
"\n"
"     This software is distributed WITHOUT ANY WARRANTY; without even\n"
"     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n"
"     PURPOSE.  See the above copyright notice for more information.\n"
"\n"
"=========================================================================*/\n"
"\n"
"// Implementation of some functions used by the Maximum Intensity projection\n"
"// (MIP) method when cropping is off.\n"
"\n"
"#version 110\n"
"\n"
"float initialMaxValue()\n"
"{\n"
"  return 0.0;\n"
"}\n"
"\n"
"void writeColorAndMaxScalar(vec4 sample,\n"
"                            vec4 opacity,\n"
"                            float maxValue)\n"
"{\n"
"  // we don't need to write maxValue to a buffer when there is no cropping.\n"
"  // color framebuffer\n"
"  gl_FragColor.r =sample.r * opacity.a;\n"
"  gl_FragColor.g =sample.g * opacity.a;\n"
"  gl_FragColor.b =sample.b * opacity.a;\n"
"  gl_FragColor.a=opacity.a;\n"
"}\n"
"\n";

