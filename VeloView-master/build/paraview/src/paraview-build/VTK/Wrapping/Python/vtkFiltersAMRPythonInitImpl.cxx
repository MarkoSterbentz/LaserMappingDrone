// Generated by vtkWrapPythonInit in VTK/Wrapping
#include "vtkPython.h"

#include "vtkSystemIncludes.h"
#include <string.h>
// Handle compiler warning messages, etc.
#if defined( _MSC_VER ) && !defined(VTK_DISPLAY_WIN32_WARNINGS)
#pragma warning ( disable : 4706 )
#endif // Windows Warnings 

extern  "C" {VTK_ABI_EXPORT PyObject *PyVTKAddFile_vtkAMRCutPlane(PyObject *, const char *); }
extern  "C" {VTK_ABI_EXPORT PyObject *PyVTKAddFile_vtkAMRGaussianPulseSource(PyObject *, const char *); }
extern  "C" {VTK_ABI_EXPORT PyObject *PyVTKAddFile_vtkAMRResampleFilter(PyObject *, const char *); }
extern  "C" {VTK_ABI_EXPORT PyObject *PyVTKAddFile_vtkAMRSliceFilter(PyObject *, const char *); }
extern  "C" {VTK_ABI_EXPORT PyObject *PyVTKAddFile_vtkAMRToMultiBlockFilter(PyObject *, const char *); }
extern  "C" {VTK_ABI_EXPORT PyObject *PyVTKAddFile_vtkImageToAMR(PyObject *, const char *); }
extern  "C" {VTK_ABI_EXPORT PyObject *PyVTKAddFile_vtkParallelAMRUtilities(PyObject *, const char *); }

static PyMethodDef PyvtkFiltersAMRPython_ClassMethods[] = {
{NULL, NULL, 0, NULL}};

extern  "C" {VTK_ABI_EXPORT void real_initvtkFiltersAMRPython(const char *modulename); }

void real_initvtkFiltersAMRPython(const char *modulename)
{
  PyObject *m, *d;

  m = Py_InitModule((char*)modulename, PyvtkFiltersAMRPython_ClassMethods);
  d = PyModule_GetDict(m);
  if (!d)
    {
    Py_FatalError((char*)"can't get dictionary for module vtkFiltersAMRPython");
    }
  PyVTKAddFile_vtkAMRCutPlane(d, modulename);
  PyVTKAddFile_vtkAMRGaussianPulseSource(d, modulename);
  PyVTKAddFile_vtkAMRResampleFilter(d, modulename);
  PyVTKAddFile_vtkAMRSliceFilter(d, modulename);
  PyVTKAddFile_vtkAMRToMultiBlockFilter(d, modulename);
  PyVTKAddFile_vtkImageToAMR(d, modulename);
  PyVTKAddFile_vtkParallelAMRUtilities(d, modulename);
}

