// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "vtkPVMessage.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace paraview_protobuf {

namespace {

const ::google::protobuf::Descriptor* Variant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Variant_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Variant_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* VariantList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VariantList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageCollection_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageCollection_reflection_ = NULL;
const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* DefinitionHeader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DefinitionHeader_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProxyState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProxyState_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProxyState_SubProxy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProxyState_SubProxy_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProxyState_Annotation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProxyState_Annotation_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProxyState_UserData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProxyState_UserData_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProxyState_Property_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProxyState_Property_reflection_ = NULL;
const ::google::protobuf::Descriptor* PXMRegistrationState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PXMRegistrationState_reflection_ = NULL;
const ::google::protobuf::Descriptor* PXMRegistrationState_Entry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PXMRegistrationState_Entry_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProxyDefinitionState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProxyDefinitionState_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProxyDefinitionState_ProxyXMLDefinition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProxyDefinitionState_ProxyXMLDefinition_reflection_ = NULL;
const ::google::protobuf::Descriptor* PullRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PullRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProxySelectionModelState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProxySelectionModelState_reflection_ = NULL;
const ::google::protobuf::Descriptor* LinkState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LinkState_reflection_ = NULL;
const ::google::protobuf::Descriptor* LinkState_LinkDescription_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LinkState_LinkDescription_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* LinkState_LinkDescription_Direction_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MousePointer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MousePointer_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MousePointer_Ratio_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ChartViewBounds_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChartViewBounds_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientsInformation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientsInformation_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientsInformation_ClientInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientsInformation_ClientInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* QtEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QtEvent_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* QtEvent_QtEventType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_vtkPVMessage_2eproto() {
  protobuf_AddDesc_vtkPVMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "vtkPVMessage.proto");
  GOOGLE_CHECK(file != NULL);
  Variant_descriptor_ = file->message_type(0);
  static const int Variant_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, idtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, integer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, float64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, proxy_global_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, port_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, txt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, binary_),
  };
  Variant_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Variant_descriptor_,
      Variant::default_instance_,
      Variant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Variant));
  Variant_Type_descriptor_ = Variant_descriptor_->enum_type(0);
  VariantList_descriptor_ = file->message_type(1);
  static const int VariantList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VariantList, variant_),
  };
  VariantList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VariantList_descriptor_,
      VariantList::default_instance_,
      VariantList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VariantList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VariantList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VariantList));
  MessageCollection_descriptor_ = file->message_type(2);
  static const int MessageCollection_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageCollection, item_),
  };
  MessageCollection_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageCollection_descriptor_,
      MessageCollection::default_instance_,
      MessageCollection_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageCollection, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageCollection, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageCollection));
  Message_descriptor_ = file->message_type(3);
  static const int Message_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, global_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, share_only_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, req_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, client_id_),
  };
  Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Message_descriptor_,
      Message::default_instance_,
      Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Message));
  DefinitionHeader_descriptor_ = file->message_type(4);
  static const int DefinitionHeader_offsets_[1] = {
  };
  DefinitionHeader_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DefinitionHeader_descriptor_,
      DefinitionHeader::default_instance_,
      DefinitionHeader_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefinitionHeader, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefinitionHeader, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DefinitionHeader));
  ProxyState_descriptor_ = file->message_type(5);
  static const int ProxyState_offsets_[1] = {
  };
  ProxyState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProxyState_descriptor_,
      ProxyState::default_instance_,
      ProxyState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProxyState));
  ProxyState_SubProxy_descriptor_ = ProxyState_descriptor_->nested_type(0);
  static const int ProxyState_SubProxy_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_SubProxy, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_SubProxy, global_id_),
  };
  ProxyState_SubProxy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProxyState_SubProxy_descriptor_,
      ProxyState_SubProxy::default_instance_,
      ProxyState_SubProxy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_SubProxy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_SubProxy, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProxyState_SubProxy));
  ProxyState_Annotation_descriptor_ = ProxyState_descriptor_->nested_type(1);
  static const int ProxyState_Annotation_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_Annotation, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_Annotation, value_),
  };
  ProxyState_Annotation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProxyState_Annotation_descriptor_,
      ProxyState_Annotation::default_instance_,
      ProxyState_Annotation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_Annotation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_Annotation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProxyState_Annotation));
  ProxyState_UserData_descriptor_ = ProxyState_descriptor_->nested_type(2);
  static const int ProxyState_UserData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_UserData, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_UserData, variant_),
  };
  ProxyState_UserData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProxyState_UserData_descriptor_,
      ProxyState_UserData::default_instance_,
      ProxyState_UserData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_UserData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_UserData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProxyState_UserData));
  ProxyState_Property_descriptor_ = ProxyState_descriptor_->nested_type(3);
  static const int ProxyState_Property_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_Property, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_Property, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_Property, user_data_),
  };
  ProxyState_Property_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProxyState_Property_descriptor_,
      ProxyState_Property::default_instance_,
      ProxyState_Property_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_Property, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyState_Property, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProxyState_Property));
  PXMRegistrationState_descriptor_ = file->message_type(6);
  static const int PXMRegistrationState_offsets_[1] = {
  };
  PXMRegistrationState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PXMRegistrationState_descriptor_,
      PXMRegistrationState::default_instance_,
      PXMRegistrationState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PXMRegistrationState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PXMRegistrationState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PXMRegistrationState));
  PXMRegistrationState_Entry_descriptor_ = PXMRegistrationState_descriptor_->nested_type(0);
  static const int PXMRegistrationState_Entry_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PXMRegistrationState_Entry, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PXMRegistrationState_Entry, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PXMRegistrationState_Entry, global_id_),
  };
  PXMRegistrationState_Entry_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PXMRegistrationState_Entry_descriptor_,
      PXMRegistrationState_Entry::default_instance_,
      PXMRegistrationState_Entry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PXMRegistrationState_Entry, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PXMRegistrationState_Entry, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PXMRegistrationState_Entry));
  ProxyDefinitionState_descriptor_ = file->message_type(7);
  static const int ProxyDefinitionState_offsets_[1] = {
  };
  ProxyDefinitionState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProxyDefinitionState_descriptor_,
      ProxyDefinitionState::default_instance_,
      ProxyDefinitionState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyDefinitionState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyDefinitionState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProxyDefinitionState));
  ProxyDefinitionState_ProxyXMLDefinition_descriptor_ = ProxyDefinitionState_descriptor_->nested_type(0);
  static const int ProxyDefinitionState_ProxyXMLDefinition_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyDefinitionState_ProxyXMLDefinition, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyDefinitionState_ProxyXMLDefinition, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyDefinitionState_ProxyXMLDefinition, xml_),
  };
  ProxyDefinitionState_ProxyXMLDefinition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProxyDefinitionState_ProxyXMLDefinition_descriptor_,
      ProxyDefinitionState_ProxyXMLDefinition::default_instance_,
      ProxyDefinitionState_ProxyXMLDefinition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyDefinitionState_ProxyXMLDefinition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyDefinitionState_ProxyXMLDefinition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProxyDefinitionState_ProxyXMLDefinition));
  PullRequest_descriptor_ = file->message_type(8);
  static const int PullRequest_offsets_[1] = {
  };
  PullRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PullRequest_descriptor_,
      PullRequest::default_instance_,
      PullRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PullRequest));
  ProxySelectionModelState_descriptor_ = file->message_type(9);
  static const int ProxySelectionModelState_offsets_[1] = {
  };
  ProxySelectionModelState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProxySelectionModelState_descriptor_,
      ProxySelectionModelState::default_instance_,
      ProxySelectionModelState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxySelectionModelState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxySelectionModelState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProxySelectionModelState));
  LinkState_descriptor_ = file->message_type(10);
  static const int LinkState_offsets_[1] = {
  };
  LinkState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LinkState_descriptor_,
      LinkState::default_instance_,
      LinkState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LinkState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LinkState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LinkState));
  LinkState_LinkDescription_descriptor_ = LinkState_descriptor_->nested_type(0);
  static const int LinkState_LinkDescription_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LinkState_LinkDescription, proxy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LinkState_LinkDescription, property_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LinkState_LinkDescription, direction_),
  };
  LinkState_LinkDescription_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LinkState_LinkDescription_descriptor_,
      LinkState_LinkDescription::default_instance_,
      LinkState_LinkDescription_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LinkState_LinkDescription, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LinkState_LinkDescription, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LinkState_LinkDescription));
  LinkState_LinkDescription_Direction_descriptor_ = LinkState_LinkDescription_descriptor_->enum_type(0);
  MousePointer_descriptor_ = file->message_type(11);
  static const int MousePointer_offsets_[1] = {
  };
  MousePointer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MousePointer_descriptor_,
      MousePointer::default_instance_,
      MousePointer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MousePointer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MousePointer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MousePointer));
  MousePointer_Ratio_descriptor_ = MousePointer_descriptor_->enum_type(0);
  ChartViewBounds_descriptor_ = file->message_type(12);
  static const int ChartViewBounds_offsets_[1] = {
  };
  ChartViewBounds_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChartViewBounds_descriptor_,
      ChartViewBounds::default_instance_,
      ChartViewBounds_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChartViewBounds, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChartViewBounds, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChartViewBounds));
  ClientsInformation_descriptor_ = file->message_type(13);
  static const int ClientsInformation_offsets_[1] = {
  };
  ClientsInformation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientsInformation_descriptor_,
      ClientsInformation::default_instance_,
      ClientsInformation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientsInformation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientsInformation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientsInformation));
  ClientsInformation_ClientInfo_descriptor_ = ClientsInformation_descriptor_->nested_type(0);
  static const int ClientsInformation_ClientInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientsInformation_ClientInfo, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientsInformation_ClientInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientsInformation_ClientInfo, is_master_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientsInformation_ClientInfo, follow_cam_),
  };
  ClientsInformation_ClientInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientsInformation_ClientInfo_descriptor_,
      ClientsInformation_ClientInfo::default_instance_,
      ClientsInformation_ClientInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientsInformation_ClientInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientsInformation_ClientInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientsInformation_ClientInfo));
  ChatMessage_descriptor_ = file->message_type(14);
  static const int ChatMessage_offsets_[1] = {
  };
  ChatMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChatMessage_descriptor_,
      ChatMessage::default_instance_,
      ChatMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChatMessage));
  QtEvent_descriptor_ = file->message_type(15);
  static const int QtEvent_offsets_[1] = {
  };
  QtEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QtEvent_descriptor_,
      QtEvent::default_instance_,
      QtEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QtEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QtEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QtEvent));
  QtEvent_QtEventType_descriptor_ = QtEvent_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_vtkPVMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Variant_descriptor_, &Variant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VariantList_descriptor_, &VariantList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageCollection_descriptor_, &MessageCollection::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Message_descriptor_, &Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DefinitionHeader_descriptor_, &DefinitionHeader::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProxyState_descriptor_, &ProxyState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProxyState_SubProxy_descriptor_, &ProxyState_SubProxy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProxyState_Annotation_descriptor_, &ProxyState_Annotation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProxyState_UserData_descriptor_, &ProxyState_UserData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProxyState_Property_descriptor_, &ProxyState_Property::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PXMRegistrationState_descriptor_, &PXMRegistrationState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PXMRegistrationState_Entry_descriptor_, &PXMRegistrationState_Entry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProxyDefinitionState_descriptor_, &ProxyDefinitionState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProxyDefinitionState_ProxyXMLDefinition_descriptor_, &ProxyDefinitionState_ProxyXMLDefinition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PullRequest_descriptor_, &PullRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProxySelectionModelState_descriptor_, &ProxySelectionModelState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LinkState_descriptor_, &LinkState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LinkState_LinkDescription_descriptor_, &LinkState_LinkDescription::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MousePointer_descriptor_, &MousePointer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChartViewBounds_descriptor_, &ChartViewBounds::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientsInformation_descriptor_, &ClientsInformation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientsInformation_ClientInfo_descriptor_, &ClientsInformation_ClientInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChatMessage_descriptor_, &ChatMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QtEvent_descriptor_, &QtEvent::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_vtkPVMessage_2eproto() {
  delete Variant::default_instance_;
  delete Variant_reflection_;
  delete VariantList::default_instance_;
  delete VariantList_reflection_;
  delete MessageCollection::default_instance_;
  delete MessageCollection_reflection_;
  delete Message::default_instance_;
  delete Message_reflection_;
  delete DefinitionHeader::default_instance_;
  delete DefinitionHeader_reflection_;
  delete ProxyState::default_instance_;
  delete ProxyState_reflection_;
  delete ProxyState_SubProxy::default_instance_;
  delete ProxyState_SubProxy_reflection_;
  delete ProxyState_Annotation::default_instance_;
  delete ProxyState_Annotation_reflection_;
  delete ProxyState_UserData::default_instance_;
  delete ProxyState_UserData_reflection_;
  delete ProxyState_Property::default_instance_;
  delete ProxyState_Property_reflection_;
  delete PXMRegistrationState::default_instance_;
  delete PXMRegistrationState_reflection_;
  delete PXMRegistrationState_Entry::default_instance_;
  delete PXMRegistrationState_Entry_reflection_;
  delete ProxyDefinitionState::default_instance_;
  delete ProxyDefinitionState_reflection_;
  delete ProxyDefinitionState_ProxyXMLDefinition::default_instance_;
  delete ProxyDefinitionState_ProxyXMLDefinition_reflection_;
  delete PullRequest::default_instance_;
  delete PullRequest_reflection_;
  delete ProxySelectionModelState::default_instance_;
  delete ProxySelectionModelState_reflection_;
  delete LinkState::default_instance_;
  delete LinkState_reflection_;
  delete LinkState_LinkDescription::default_instance_;
  delete LinkState_LinkDescription_reflection_;
  delete MousePointer::default_instance_;
  delete MousePointer_reflection_;
  delete ChartViewBounds::default_instance_;
  delete ChartViewBounds_reflection_;
  delete ClientsInformation::default_instance_;
  delete ClientsInformation_reflection_;
  delete ClientsInformation_ClientInfo::default_instance_;
  delete ClientsInformation_ClientInfo_reflection_;
  delete ChatMessage::default_instance_;
  delete ChatMessage_reflection_;
  delete QtEvent::default_instance_;
  delete QtEvent_reflection_;
}

void protobuf_AddDesc_vtkPVMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022vtkPVMessage.proto\022\021paraview_protobuf\""
    "\225\002\n\007Variant\022-\n\004type\030\001 \002(\0162\037.paraview_pro"
    "tobuf.Variant.Type\022\016\n\006idtype\030\003 \003(\022\022\017\n\007in"
    "teger\030\004 \003(\021\022\017\n\007float64\030\005 \003(\001\022\027\n\017proxy_gl"
    "obal_id\030\006 \003(\004\022\023\n\013port_number\030\007 \003(\005\022\013\n\003tx"
    "t\030\010 \003(\t\022\016\n\006binary\030\t \003(\014\"^\n\004Type\022\007\n\003INT\020\000"
    "\022\013\n\007FLOAT64\020\001\022\n\n\006IDTYPE\020\002\022\n\n\006STRING\020\003\022\t\n"
    "\005PROXY\020\004\022\t\n\005INPUT\020\005\022\t\n\005BYTES\020\006\022\007\n\003MAP\020\007\""
    ":\n\013VariantList\022+\n\007variant\030\001 \003(\0132\032.paravi"
    "ew_protobuf.Variant\"=\n\021MessageCollection"
    "\022(\n\004item\030\001 \003(\0132\032.paraview_protobuf.Messa"
    "ge\"\201\001\n\007Message\022\021\n\tglobal_id\030\001 \002(\004\022\020\n\010loc"
    "ation\030\002 \002(\r\022\031\n\nshare_only\030\003 \001(\010:\005false\022\026"
    "\n\007req_def\030\004 \001(\010:\005false\022\024\n\tclient_id\030\005 \001("
    "\r:\0010*\010\010\n\020\200\200\200\200\002\"v\n\020DefinitionHeader20\n\014cl"
    "ient_class\022\032.paraview_protobuf.Message\030\n"
    " \002(\t20\n\014server_class\022\032.paraview_protobuf"
    ".Message\030\013 \002(\t\"\326\006\n\nProxyState\032+\n\010SubProx"
    "y\022\014\n\004name\030\001 \002(\t\022\021\n\tglobal_id\030\002 \002(\r\032(\n\nAn"
    "notation\022\013\n\003key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\032D\n\010"
    "UserData\022\013\n\003key\030\001 \002(\t\022+\n\007variant\030\002 \003(\0132\032"
    ".paraview_protobuf.Variant\032~\n\010Property\022\014"
    "\n\004name\030\001 \002(\t\022)\n\005value\030\002 \001(\0132\032.paraview_p"
    "rotobuf.Variant\0229\n\tuser_data\030\003 \003(\0132&.par"
    "aview_protobuf.ProxyState.UserData2-\n\txm"
    "l_group\022\032.paraview_protobuf.Message\030\024 \002("
    "\t2,\n\010xml_name\022\032.paraview_protobuf.Messag"
    "e\030\025 \002(\t26\n\022xml_sub_proxy_name\022\032.paraview"
    "_protobuf.Message\030\026 \001(\t2T\n\010property\022\032.pa"
    "raview_protobuf.Message\030\027 \003(\0132&.paraview"
    "_protobuf.ProxyState.Property2T\n\010subprox"
    "y\022\032.paraview_protobuf.Message\030\030 \003(\0132&.pa"
    "raview_protobuf.ProxyState.SubProxy2X\n\na"
    "nnotation\022\032.paraview_protobuf.Message\030\031 "
    "\003(\0132(.paraview_protobuf.ProxyState.Annot"
    "ation29\n\016has_annotation\022\032.paraview_proto"
    "buf.Message\030\032 \001(\010:\005false2U\n\tuser_data\022\032."
    "paraview_protobuf.Message\030\033 \003(\0132&.paravi"
    "ew_protobuf.ProxyState.UserData\"\207\003\n\024PXMR"
    "egistrationState\0327\n\005Entry\022\r\n\005group\030\001 \001(\t"
    "\022\014\n\004name\030\002 \002(\t\022\021\n\tglobal_id\030\003 \002(\0042c\n\020reg"
    "istered_proxy\022\032.paraview_protobuf.Messag"
    "e\030\036 \003(\0132-.paraview_protobuf.PXMRegistrat"
    "ionState.Entry2m\n\032registered_selection_m"
    "odel\022\032.paraview_protobuf.Message\030\037 \003(\0132-"
    ".paraview_protobuf.PXMRegistrationState."
    "Entry2b\n\017registered_link\022\032.paraview_prot"
    "obuf.Message\030  \003(\0132-.paraview_protobuf.P"
    "XMRegistrationState.Entry\"\311\002\n\024ProxyDefin"
    "itionState\032>\n\022ProxyXMLDefinition\022\r\n\005grou"
    "p\030\001 \002(\t\022\014\n\004name\030\002 \002(\t\022\013\n\003xml\030\003 \002(\t2t\n\024xm"
    "l_definition_proxy\022\032.paraview_protobuf.M"
    "essage\030# \003(\0132:.paraview_protobuf.ProxyDe"
    "finitionState.ProxyXMLDefinition2{\n\033xml_"
    "custom_definition_proxy\022\032.paraview_proto"
    "buf.Message\030$ \003(\0132:.paraview_protobuf.Pr"
    "oxyDefinitionState.ProxyXMLDefinition\"X\n"
    "\013PullRequest2I\n\targuments\022\032.paraview_pro"
    "tobuf.Message\030( \003(\0132\032.paraview_protobuf."
    "Variant\"\333\001\n\030ProxySelectionModelState24\n\r"
    "current_proxy\022\032.paraview_protobuf.Messag"
    "e\0304 \001(\r:\001024\n\014current_port\022\032.paraview_pr"
    "otobuf.Message\0305 \001(\005:\002-12)\n\005proxy\022\032.para"
    "view_protobuf.Message\0302 \003(\r2(\n\004port\022\032.pa"
    "raview_protobuf.Message\0303 \003(\005\"\201\004\n\tLinkSt"
    "ate\032\260\001\n\017LinkDescription\022\r\n\005proxy\030\001 \002(\r\022\025"
    "\n\rproperty_name\030\002 \001(\t\022I\n\tdirection\030\003 \002(\016"
    "26.paraview_protobuf.LinkState.LinkDescr"
    "iption.Direction\",\n\tDirection\022\010\n\004NONE\020\000\022"
    "\t\n\005INPUT\020\001\022\n\n\006OUTPUT\020\0022:\n\020propagate_upda"
    "te\022\032.paraview_protobuf.Message\030< \001(\010:\004tr"
    "ue21\n\007enabled\022\032.paraview_protobuf.Messag"
    "e\030= \001(\010:\004true2B\n\030sync_interactive_render"
    "s\022\032.paraview_protobuf.Message\030> \001(\010:\004tru"
    "e2V\n\004link\022\032.paraview_protobuf.Message\030? "
    "\003(\0132,.paraview_protobuf.LinkState.LinkDe"
    "scription26\n\022exception_property\022\032.paravi"
    "ew_protobuf.Message\030@ \003(\t\"\312\002\n\014MousePoint"
    "er\"(\n\005Ratio\022\010\n\004BOTH\020\000\022\n\n\006HEIGHT\020\001\022\t\n\005WID"
    "TH\020\0022(\n\004view\022\032.paraview_protobuf.Message"
    "\030F \002(\r2(\n\001x\022\032.paraview_protobuf.Message\030"
    "G \001(\001:\00102(\n\001y\022\032.paraview_protobuf.Messag"
    "e\030H \001(\001:\001024\n\tforceShow\022\032.paraview_proto"
    "buf.Message\030I \001(\010:\005false2\\\n\tratioType\022\032."
    "paraview_protobuf.Message\030J \001(\0162%.paravi"
    "ew_protobuf.MousePointer.Ratio:\006HEIGHT\"f"
    "\n\017ChartViewBounds2(\n\004view\022\032.paraview_pro"
    "tobuf.Message\030K \002(\r2)\n\005range\022\032.paraview_"
    "protobuf.Message\030L \003(\001\"\317\001\n\022ClientsInform"
    "ation\032]\n\nClientInfo\022\014\n\004user\030\001 \002(\r\022\014\n\004nam"
    "e\030\002 \001(\t\022\030\n\tis_master\030\003 \001(\010:\005false\022\031\n\nfol"
    "low_cam\030\004 \001(\010:\005false2Z\n\004user\022\032.paraview_"
    "protobuf.Message\030P \003(\01320.paraview_protob"
    "uf.ClientsInformation.ClientInfo\"b\n\013Chat"
    "Message2*\n\006author\022\032.paraview_protobuf.Me"
    "ssage\030T \002(\r2\'\n\003txt\022\032.paraview_protobuf.M"
    "essage\030U \002(\t\"\177\n\007QtEvent\"\"\n\013QtEventType\022\010"
    "\n\004CHAT\020\001\022\t\n\005OTHER\020\0032P\n\004type\022\032.paraview_p"
    "rotobuf.Message\030b \002(\0162&.paraview_protobu"
    "f.QtEvent.QtEventType", 3981);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vtkPVMessage.proto", &protobuf_RegisterTypes);
  Variant::default_instance_ = new Variant();
  VariantList::default_instance_ = new VariantList();
  MessageCollection::default_instance_ = new MessageCollection();
  Message::default_instance_ = new Message();
  DefinitionHeader::default_instance_ = new DefinitionHeader();
  ProxyState::default_instance_ = new ProxyState();
  ProxyState_SubProxy::default_instance_ = new ProxyState_SubProxy();
  ProxyState_Annotation::default_instance_ = new ProxyState_Annotation();
  ProxyState_UserData::default_instance_ = new ProxyState_UserData();
  ProxyState_Property::default_instance_ = new ProxyState_Property();
  PXMRegistrationState::default_instance_ = new PXMRegistrationState();
  PXMRegistrationState_Entry::default_instance_ = new PXMRegistrationState_Entry();
  ProxyDefinitionState::default_instance_ = new ProxyDefinitionState();
  ProxyDefinitionState_ProxyXMLDefinition::default_instance_ = new ProxyDefinitionState_ProxyXMLDefinition();
  PullRequest::default_instance_ = new PullRequest();
  ProxySelectionModelState::default_instance_ = new ProxySelectionModelState();
  LinkState::default_instance_ = new LinkState();
  LinkState_LinkDescription::default_instance_ = new LinkState_LinkDescription();
  MousePointer::default_instance_ = new MousePointer();
  ChartViewBounds::default_instance_ = new ChartViewBounds();
  ClientsInformation::default_instance_ = new ClientsInformation();
  ClientsInformation_ClientInfo::default_instance_ = new ClientsInformation_ClientInfo();
  ChatMessage::default_instance_ = new ChatMessage();
  QtEvent::default_instance_ = new QtEvent();
  Variant::default_instance_->InitAsDefaultInstance();
  VariantList::default_instance_->InitAsDefaultInstance();
  MessageCollection::default_instance_->InitAsDefaultInstance();
  Message::default_instance_->InitAsDefaultInstance();
  DefinitionHeader::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    10, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    11, 9, false, false);
  ProxyState::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    20, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    21, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    22, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::paraview_protobuf::Message::default_instance(),
    23, 11, true, false,
    &::paraview_protobuf::ProxyState_Property::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::paraview_protobuf::Message::default_instance(),
    24, 11, true, false,
    &::paraview_protobuf::ProxyState_SubProxy::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::paraview_protobuf::Message::default_instance(),
    25, 11, true, false,
    &::paraview_protobuf::ProxyState_Annotation::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    26, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::paraview_protobuf::Message::default_instance(),
    27, 11, true, false,
    &::paraview_protobuf::ProxyState_UserData::default_instance());
  ProxyState_SubProxy::default_instance_->InitAsDefaultInstance();
  ProxyState_Annotation::default_instance_->InitAsDefaultInstance();
  ProxyState_UserData::default_instance_->InitAsDefaultInstance();
  ProxyState_Property::default_instance_->InitAsDefaultInstance();
  PXMRegistrationState::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::paraview_protobuf::Message::default_instance(),
    30, 11, true, false,
    &::paraview_protobuf::PXMRegistrationState_Entry::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::paraview_protobuf::Message::default_instance(),
    31, 11, true, false,
    &::paraview_protobuf::PXMRegistrationState_Entry::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::paraview_protobuf::Message::default_instance(),
    32, 11, true, false,
    &::paraview_protobuf::PXMRegistrationState_Entry::default_instance());
  PXMRegistrationState_Entry::default_instance_->InitAsDefaultInstance();
  ProxyDefinitionState::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::paraview_protobuf::Message::default_instance(),
    35, 11, true, false,
    &::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::paraview_protobuf::Message::default_instance(),
    36, 11, true, false,
    &::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition::default_instance());
  ProxyDefinitionState_ProxyXMLDefinition::default_instance_->InitAsDefaultInstance();
  PullRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::paraview_protobuf::Message::default_instance(),
    40, 11, true, false,
    &::paraview_protobuf::Variant::default_instance());
  ProxySelectionModelState::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    52, 13, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    53, 5, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    50, 13, true, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    51, 5, true, false);
  LinkState::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    60, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    61, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    62, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::paraview_protobuf::Message::default_instance(),
    63, 11, true, false,
    &::paraview_protobuf::LinkState_LinkDescription::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    64, 9, true, false);
  LinkState_LinkDescription::default_instance_->InitAsDefaultInstance();
  MousePointer::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    70, 13, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    71, 1, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    72, 1, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    73, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    &::paraview_protobuf::Message::default_instance(),
    74, 14, false, false,
    &::paraview_protobuf::MousePointer_Ratio_IsValid);
  ChartViewBounds::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    75, 13, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    76, 1, true, false);
  ClientsInformation::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::paraview_protobuf::Message::default_instance(),
    80, 11, true, false,
    &::paraview_protobuf::ClientsInformation_ClientInfo::default_instance());
  ClientsInformation_ClientInfo::default_instance_->InitAsDefaultInstance();
  ChatMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    84, 13, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::paraview_protobuf::Message::default_instance(),
    85, 9, false, false);
  QtEvent::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    &::paraview_protobuf::Message::default_instance(),
    98, 14, false, false,
    &::paraview_protobuf::QtEvent_QtEventType_IsValid);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_vtkPVMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_vtkPVMessage_2eproto {
  StaticDescriptorInitializer_vtkPVMessage_2eproto() {
    protobuf_AddDesc_vtkPVMessage_2eproto();
  }
} static_descriptor_initializer_vtkPVMessage_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* Variant_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Variant_Type_descriptor_;
}
bool Variant_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Variant_Type Variant::INT;
const Variant_Type Variant::FLOAT64;
const Variant_Type Variant::IDTYPE;
const Variant_Type Variant::STRING;
const Variant_Type Variant::PROXY;
const Variant_Type Variant::INPUT;
const Variant_Type Variant::BYTES;
const Variant_Type Variant::MAP;
const Variant_Type Variant::Type_MIN;
const Variant_Type Variant::Type_MAX;
const int Variant::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Variant::kTypeFieldNumber;
const int Variant::kIdtypeFieldNumber;
const int Variant::kIntegerFieldNumber;
const int Variant::kFloat64FieldNumber;
const int Variant::kProxyGlobalIdFieldNumber;
const int Variant::kPortNumberFieldNumber;
const int Variant::kTxtFieldNumber;
const int Variant::kBinaryFieldNumber;
#endif  // !_MSC_VER

Variant::Variant()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Variant::InitAsDefaultInstance() {
}

Variant::Variant(const Variant& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Variant::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Variant::~Variant() {
  SharedDtor();
}

void Variant::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Variant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Variant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Variant_descriptor_;
}

const Variant& Variant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

Variant* Variant::default_instance_ = NULL;

Variant* Variant::New() const {
  return new Variant;
}

void Variant::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  idtype_.Clear();
  integer_.Clear();
  float64_.Clear();
  proxy_global_id_.Clear();
  port_number_.Clear();
  txt_.Clear();
  binary_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Variant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .paraview_protobuf.Variant.Type type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::paraview_protobuf::Variant_Type_IsValid(value)) {
            set_type(static_cast< ::paraview_protobuf::Variant_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_idtype;
        break;
      }
      
      // repeated sint64 idtype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_idtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 24, input, this->mutable_idtype())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_idtype())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_idtype;
        if (input->ExpectTag(32)) goto parse_integer;
        break;
      }
      
      // repeated sint32 integer = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_integer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 32, input, this->mutable_integer())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_integer())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_integer;
        if (input->ExpectTag(41)) goto parse_float64;
        break;
      }
      
      // repeated double float64 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_float64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 41, input, this->mutable_float64())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_float64())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(41)) goto parse_float64;
        if (input->ExpectTag(48)) goto parse_proxy_global_id;
        break;
      }
      
      // repeated uint64 proxy_global_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proxy_global_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 48, input, this->mutable_proxy_global_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_proxy_global_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_proxy_global_id;
        if (input->ExpectTag(56)) goto parse_port_number;
        break;
      }
      
      // repeated int32 port_number = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_port_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_port_number())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_port_number())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_port_number;
        if (input->ExpectTag(66)) goto parse_txt;
        break;
      }
      
      // repeated string txt = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_txt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_txt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->txt(0).data(), this->txt(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_txt;
        if (input->ExpectTag(74)) goto parse_binary;
        break;
      }
      
      // repeated bytes binary = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_binary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_binary()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_binary;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Variant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .paraview_protobuf.Variant.Type type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }
  
  // repeated sint64 idtype = 3;
  for (int i = 0; i < this->idtype_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(
      3, this->idtype(i), output);
  }
  
  // repeated sint32 integer = 4;
  for (int i = 0; i < this->integer_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      4, this->integer(i), output);
  }
  
  // repeated double float64 = 5;
  for (int i = 0; i < this->float64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      5, this->float64(i), output);
  }
  
  // repeated uint64 proxy_global_id = 6;
  for (int i = 0; i < this->proxy_global_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      6, this->proxy_global_id(i), output);
  }
  
  // repeated int32 port_number = 7;
  for (int i = 0; i < this->port_number_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->port_number(i), output);
  }
  
  // repeated string txt = 8;
  for (int i = 0; i < this->txt_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->txt(i).data(), this->txt(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->txt(i), output);
  }
  
  // repeated bytes binary = 9;
  for (int i = 0; i < this->binary_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      9, this->binary(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Variant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .paraview_protobuf.Variant.Type type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }
  
  // repeated sint64 idtype = 3;
  for (int i = 0; i < this->idtype_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64ToArray(3, this->idtype(i), target);
  }
  
  // repeated sint32 integer = 4;
  for (int i = 0; i < this->integer_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32ToArray(4, this->integer(i), target);
  }
  
  // repeated double float64 = 5;
  for (int i = 0; i < this->float64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(5, this->float64(i), target);
  }
  
  // repeated uint64 proxy_global_id = 6;
  for (int i = 0; i < this->proxy_global_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(6, this->proxy_global_id(i), target);
  }
  
  // repeated int32 port_number = 7;
  for (int i = 0; i < this->port_number_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->port_number(i), target);
  }
  
  // repeated string txt = 8;
  for (int i = 0; i < this->txt_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->txt(i).data(), this->txt(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->txt(i), target);
  }
  
  // repeated bytes binary = 9;
  for (int i = 0; i < this->binary_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(9, this->binary(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Variant::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .paraview_protobuf.Variant.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
  }
  // repeated sint64 idtype = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->idtype_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->idtype(i));
    }
    total_size += 1 * this->idtype_size() + data_size;
  }
  
  // repeated sint32 integer = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->integer_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->integer(i));
    }
    total_size += 1 * this->integer_size() + data_size;
  }
  
  // repeated double float64 = 5;
  {
    int data_size = 0;
    data_size = 8 * this->float64_size();
    total_size += 1 * this->float64_size() + data_size;
  }
  
  // repeated uint64 proxy_global_id = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->proxy_global_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->proxy_global_id(i));
    }
    total_size += 1 * this->proxy_global_id_size() + data_size;
  }
  
  // repeated int32 port_number = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->port_number_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->port_number(i));
    }
    total_size += 1 * this->port_number_size() + data_size;
  }
  
  // repeated string txt = 8;
  total_size += 1 * this->txt_size();
  for (int i = 0; i < this->txt_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->txt(i));
  }
  
  // repeated bytes binary = 9;
  total_size += 1 * this->binary_size();
  for (int i = 0; i < this->binary_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->binary(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Variant::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Variant* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Variant*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Variant::MergeFrom(const Variant& from) {
  GOOGLE_CHECK_NE(&from, this);
  idtype_.MergeFrom(from.idtype_);
  integer_.MergeFrom(from.integer_);
  float64_.MergeFrom(from.float64_);
  proxy_global_id_.MergeFrom(from.proxy_global_id_);
  port_number_.MergeFrom(from.port_number_);
  txt_.MergeFrom(from.txt_);
  binary_.MergeFrom(from.binary_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Variant::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Variant::CopyFrom(const Variant& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Variant::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void Variant::Swap(Variant* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    idtype_.Swap(&other->idtype_);
    integer_.Swap(&other->integer_);
    float64_.Swap(&other->float64_);
    proxy_global_id_.Swap(&other->proxy_global_id_);
    port_number_.Swap(&other->port_number_);
    txt_.Swap(&other->txt_);
    binary_.Swap(&other->binary_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Variant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Variant_descriptor_;
  metadata.reflection = Variant_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int VariantList::kVariantFieldNumber;
#endif  // !_MSC_VER

VariantList::VariantList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void VariantList::InitAsDefaultInstance() {
}

VariantList::VariantList(const VariantList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void VariantList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VariantList::~VariantList() {
  SharedDtor();
}

void VariantList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VariantList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VariantList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VariantList_descriptor_;
}

const VariantList& VariantList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

VariantList* VariantList::default_instance_ = NULL;

VariantList* VariantList::New() const {
  return new VariantList;
}

void VariantList::Clear() {
  variant_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VariantList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paraview_protobuf.Variant variant = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_variant:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_variant()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_variant;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void VariantList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .paraview_protobuf.Variant variant = 1;
  for (int i = 0; i < this->variant_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->variant(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* VariantList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .paraview_protobuf.Variant variant = 1;
  for (int i = 0; i < this->variant_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->variant(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int VariantList::ByteSize() const {
  int total_size = 0;
  
  // repeated .paraview_protobuf.Variant variant = 1;
  total_size += 1 * this->variant_size();
  for (int i = 0; i < this->variant_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->variant(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VariantList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VariantList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VariantList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VariantList::MergeFrom(const VariantList& from) {
  GOOGLE_CHECK_NE(&from, this);
  variant_.MergeFrom(from.variant_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VariantList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VariantList::CopyFrom(const VariantList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VariantList::IsInitialized() const {
  
  for (int i = 0; i < variant_size(); i++) {
    if (!this->variant(i).IsInitialized()) return false;
  }
  return true;
}

void VariantList::Swap(VariantList* other) {
  if (other != this) {
    variant_.Swap(&other->variant_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VariantList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VariantList_descriptor_;
  metadata.reflection = VariantList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageCollection::kItemFieldNumber;
#endif  // !_MSC_VER

MessageCollection::MessageCollection()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MessageCollection::InitAsDefaultInstance() {
}

MessageCollection::MessageCollection(const MessageCollection& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MessageCollection::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageCollection::~MessageCollection() {
  SharedDtor();
}

void MessageCollection::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageCollection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageCollection::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageCollection_descriptor_;
}

const MessageCollection& MessageCollection::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

MessageCollection* MessageCollection::default_instance_ = NULL;

MessageCollection* MessageCollection::New() const {
  return new MessageCollection;
}

void MessageCollection::Clear() {
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageCollection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paraview_protobuf.Message item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MessageCollection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .paraview_protobuf.Message item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MessageCollection::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .paraview_protobuf.Message item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MessageCollection::ByteSize() const {
  int total_size = 0;
  
  // repeated .paraview_protobuf.Message item = 1;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageCollection::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageCollection* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageCollection*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageCollection::MergeFrom(const MessageCollection& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageCollection::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageCollection::CopyFrom(const MessageCollection& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageCollection::IsInitialized() const {
  
  for (int i = 0; i < item_size(); i++) {
    if (!this->item(i).IsInitialized()) return false;
  }
  return true;
}

void MessageCollection::Swap(MessageCollection* other) {
  if (other != this) {
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageCollection::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageCollection_descriptor_;
  metadata.reflection = MessageCollection_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Message::kGlobalIdFieldNumber;
const int Message::kLocationFieldNumber;
const int Message::kShareOnlyFieldNumber;
const int Message::kReqDefFieldNumber;
const int Message::kClientIdFieldNumber;
#endif  // !_MSC_VER

Message::Message()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Message::InitAsDefaultInstance() {
}

Message::Message(const Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Message::SharedCtor() {
  _cached_size_ = 0;
  global_id_ = GOOGLE_ULONGLONG(0);
  location_ = 0u;
  share_only_ = false;
  req_def_ = false;
  client_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Message::~Message() {
  SharedDtor();
}

void Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

Message* Message::default_instance_ = NULL;

Message* Message::New() const {
  return new Message;
}

void Message::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    global_id_ = GOOGLE_ULONGLONG(0);
    location_ = 0u;
    share_only_ = false;
    req_def_ = false;
    client_id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 global_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &global_id_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_location;
        break;
      }
      
      // required uint32 location = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_location:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &location_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_share_only;
        break;
      }
      
      // optional bool share_only = 3 [default = false];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_share_only:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &share_only_)));
          _set_bit(2);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_req_def;
        break;
      }
      
      // optional bool req_def = 4 [default = false];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_req_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &req_def_)));
          _set_bit(3);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_client_id;
        break;
      }
      
      // optional uint32 client_id = 5 [default = 0];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_client_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_id_)));
          _set_bit(4);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        if ((80u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 global_id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->global_id(), output);
  }
  
  // required uint32 location = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->location(), output);
  }
  
  // optional bool share_only = 3 [default = false];
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->share_only(), output);
  }
  
  // optional bool req_def = 4 [default = false];
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->req_def(), output);
  }
  
  // optional uint32 client_id = 5 [default = 0];
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->client_id(), output);
  }
  
  // Extension range [10, 536870912)
  _extensions_.SerializeWithCachedSizes(
      10, 536870912, output);
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 global_id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->global_id(), target);
  }
  
  // required uint32 location = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->location(), target);
  }
  
  // optional bool share_only = 3 [default = false];
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->share_only(), target);
  }
  
  // optional bool req_def = 4 [default = false];
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->req_def(), target);
  }
  
  // optional uint32 client_id = 5 [default = 0];
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->client_id(), target);
  }
  
  // Extension range [10, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      10, 536870912, target);
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Message::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 global_id = 1;
    if (has_global_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->global_id());
    }
    
    // required uint32 location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->location());
    }
    
    // optional bool share_only = 3 [default = false];
    if (has_share_only()) {
      total_size += 1 + 1;
    }
    
    // optional bool req_def = 4 [default = false];
    if (has_req_def()) {
      total_size += 1 + 1;
    }
    
    // optional uint32 client_id = 5 [default = 0];
    if (has_client_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_id());
    }
    
  }
  total_size += _extensions_.ByteSize();
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_global_id(from.global_id());
    }
    if (from._has_bit(1)) {
      set_location(from.location());
    }
    if (from._has_bit(2)) {
      set_share_only(from.share_only());
    }
    if (from._has_bit(3)) {
      set_req_def(from.req_def());
    }
    if (from._has_bit(4)) {
      set_client_id(from.client_id());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  
  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Message::Swap(Message* other) {
  if (other != this) {
    std::swap(global_id_, other->global_id_);
    std::swap(location_, other->location_);
    std::swap(share_only_, other->share_only_);
    std::swap(req_def_, other->req_def_);
    std::swap(client_id_, other->client_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

const ::std::string DefinitionHeader_client_class_default("");
#ifndef _MSC_VER
const int DefinitionHeader::kClientClassFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  DefinitionHeader::client_class(kClientClassFieldNumber, DefinitionHeader_client_class_default);
const ::std::string DefinitionHeader_server_class_default("");
#ifndef _MSC_VER
const int DefinitionHeader::kServerClassFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  DefinitionHeader::server_class(kServerClassFieldNumber, DefinitionHeader_server_class_default);
DefinitionHeader::DefinitionHeader()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DefinitionHeader::InitAsDefaultInstance() {
}

DefinitionHeader::DefinitionHeader(const DefinitionHeader& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DefinitionHeader::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DefinitionHeader::~DefinitionHeader() {
  SharedDtor();
}

void DefinitionHeader::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DefinitionHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DefinitionHeader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DefinitionHeader_descriptor_;
}

const DefinitionHeader& DefinitionHeader::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

DefinitionHeader* DefinitionHeader::default_instance_ = NULL;

DefinitionHeader* DefinitionHeader::New() const {
  return new DefinitionHeader;
}

void DefinitionHeader::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DefinitionHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void DefinitionHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DefinitionHeader::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DefinitionHeader::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DefinitionHeader::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DefinitionHeader* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DefinitionHeader*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DefinitionHeader::MergeFrom(const DefinitionHeader& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DefinitionHeader::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DefinitionHeader::CopyFrom(const DefinitionHeader& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefinitionHeader::IsInitialized() const {
  
  return true;
}

void DefinitionHeader::Swap(DefinitionHeader* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DefinitionHeader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DefinitionHeader_descriptor_;
  metadata.reflection = DefinitionHeader_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string ProxyState_SubProxy::_default_name_;
#ifndef _MSC_VER
const int ProxyState_SubProxy::kNameFieldNumber;
const int ProxyState_SubProxy::kGlobalIdFieldNumber;
#endif  // !_MSC_VER

ProxyState_SubProxy::ProxyState_SubProxy()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProxyState_SubProxy::InitAsDefaultInstance() {
}

ProxyState_SubProxy::ProxyState_SubProxy(const ProxyState_SubProxy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProxyState_SubProxy::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&_default_name_);
  global_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProxyState_SubProxy::~ProxyState_SubProxy() {
  SharedDtor();
}

void ProxyState_SubProxy::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ProxyState_SubProxy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProxyState_SubProxy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProxyState_SubProxy_descriptor_;
}

const ProxyState_SubProxy& ProxyState_SubProxy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

ProxyState_SubProxy* ProxyState_SubProxy::default_instance_ = NULL;

ProxyState_SubProxy* ProxyState_SubProxy::New() const {
  return new ProxyState_SubProxy;
}

void ProxyState_SubProxy::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    global_id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProxyState_SubProxy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_global_id;
        break;
      }
      
      // required uint32 global_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_global_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &global_id_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProxyState_SubProxy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // required uint32 global_id = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->global_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProxyState_SubProxy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // required uint32 global_id = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->global_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProxyState_SubProxy::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required uint32 global_id = 2;
    if (has_global_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->global_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyState_SubProxy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProxyState_SubProxy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProxyState_SubProxy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProxyState_SubProxy::MergeFrom(const ProxyState_SubProxy& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_name(from.name());
    }
    if (from._has_bit(1)) {
      set_global_id(from.global_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProxyState_SubProxy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyState_SubProxy::CopyFrom(const ProxyState_SubProxy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyState_SubProxy::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void ProxyState_SubProxy::Swap(ProxyState_SubProxy* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(global_id_, other->global_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProxyState_SubProxy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProxyState_SubProxy_descriptor_;
  metadata.reflection = ProxyState_SubProxy_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::std::string ProxyState_Annotation::_default_key_;
const ::std::string ProxyState_Annotation::_default_value_;
#ifndef _MSC_VER
const int ProxyState_Annotation::kKeyFieldNumber;
const int ProxyState_Annotation::kValueFieldNumber;
#endif  // !_MSC_VER

ProxyState_Annotation::ProxyState_Annotation()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProxyState_Annotation::InitAsDefaultInstance() {
}

ProxyState_Annotation::ProxyState_Annotation(const ProxyState_Annotation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProxyState_Annotation::SharedCtor() {
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&_default_key_);
  value_ = const_cast< ::std::string*>(&_default_value_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProxyState_Annotation::~ProxyState_Annotation() {
  SharedDtor();
}

void ProxyState_Annotation::SharedDtor() {
  if (key_ != &_default_key_) {
    delete key_;
  }
  if (value_ != &_default_value_) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void ProxyState_Annotation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProxyState_Annotation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProxyState_Annotation_descriptor_;
}

const ProxyState_Annotation& ProxyState_Annotation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

ProxyState_Annotation* ProxyState_Annotation::default_instance_ = NULL;

ProxyState_Annotation* ProxyState_Annotation::New() const {
  return new ProxyState_Annotation;
}

void ProxyState_Annotation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (key_ != &_default_key_) {
        key_->clear();
      }
    }
    if (_has_bit(1)) {
      if (value_ != &_default_value_) {
        value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProxyState_Annotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }
      
      // required string value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProxyState_Annotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string key = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->key(), output);
  }
  
  // required string value = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProxyState_Annotation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string key = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }
  
  // required string value = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProxyState_Annotation::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }
    
    // required string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyState_Annotation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProxyState_Annotation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProxyState_Annotation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProxyState_Annotation::MergeFrom(const ProxyState_Annotation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_key(from.key());
    }
    if (from._has_bit(1)) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProxyState_Annotation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyState_Annotation::CopyFrom(const ProxyState_Annotation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyState_Annotation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void ProxyState_Annotation::Swap(ProxyState_Annotation* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProxyState_Annotation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProxyState_Annotation_descriptor_;
  metadata.reflection = ProxyState_Annotation_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::std::string ProxyState_UserData::_default_key_;
#ifndef _MSC_VER
const int ProxyState_UserData::kKeyFieldNumber;
const int ProxyState_UserData::kVariantFieldNumber;
#endif  // !_MSC_VER

ProxyState_UserData::ProxyState_UserData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProxyState_UserData::InitAsDefaultInstance() {
}

ProxyState_UserData::ProxyState_UserData(const ProxyState_UserData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProxyState_UserData::SharedCtor() {
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&_default_key_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProxyState_UserData::~ProxyState_UserData() {
  SharedDtor();
}

void ProxyState_UserData::SharedDtor() {
  if (key_ != &_default_key_) {
    delete key_;
  }
  if (this != default_instance_) {
  }
}

void ProxyState_UserData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProxyState_UserData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProxyState_UserData_descriptor_;
}

const ProxyState_UserData& ProxyState_UserData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

ProxyState_UserData* ProxyState_UserData::default_instance_ = NULL;

ProxyState_UserData* ProxyState_UserData::New() const {
  return new ProxyState_UserData;
}

void ProxyState_UserData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (key_ != &_default_key_) {
        key_->clear();
      }
    }
  }
  variant_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProxyState_UserData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_variant;
        break;
      }
      
      // repeated .paraview_protobuf.Variant variant = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_variant:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_variant()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_variant;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProxyState_UserData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string key = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->key(), output);
  }
  
  // repeated .paraview_protobuf.Variant variant = 2;
  for (int i = 0; i < this->variant_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->variant(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProxyState_UserData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string key = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }
  
  // repeated .paraview_protobuf.Variant variant = 2;
  for (int i = 0; i < this->variant_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->variant(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProxyState_UserData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }
    
  }
  // repeated .paraview_protobuf.Variant variant = 2;
  total_size += 1 * this->variant_size();
  for (int i = 0; i < this->variant_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->variant(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyState_UserData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProxyState_UserData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProxyState_UserData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProxyState_UserData::MergeFrom(const ProxyState_UserData& from) {
  GOOGLE_CHECK_NE(&from, this);
  variant_.MergeFrom(from.variant_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_key(from.key());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProxyState_UserData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyState_UserData::CopyFrom(const ProxyState_UserData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyState_UserData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < variant_size(); i++) {
    if (!this->variant(i).IsInitialized()) return false;
  }
  return true;
}

void ProxyState_UserData::Swap(ProxyState_UserData* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    variant_.Swap(&other->variant_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProxyState_UserData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProxyState_UserData_descriptor_;
  metadata.reflection = ProxyState_UserData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::std::string ProxyState_Property::_default_name_;
#ifndef _MSC_VER
const int ProxyState_Property::kNameFieldNumber;
const int ProxyState_Property::kValueFieldNumber;
const int ProxyState_Property::kUserDataFieldNumber;
#endif  // !_MSC_VER

ProxyState_Property::ProxyState_Property()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProxyState_Property::InitAsDefaultInstance() {
  value_ = const_cast< ::paraview_protobuf::Variant*>(&::paraview_protobuf::Variant::default_instance());
}

ProxyState_Property::ProxyState_Property(const ProxyState_Property& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProxyState_Property::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&_default_name_);
  value_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProxyState_Property::~ProxyState_Property() {
  SharedDtor();
}

void ProxyState_Property::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
    delete value_;
  }
}

void ProxyState_Property::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProxyState_Property::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProxyState_Property_descriptor_;
}

const ProxyState_Property& ProxyState_Property::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

ProxyState_Property* ProxyState_Property::default_instance_ = NULL;

ProxyState_Property* ProxyState_Property::New() const {
  return new ProxyState_Property;
}

void ProxyState_Property::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    if (_has_bit(1)) {
      if (value_ != NULL) value_->::paraview_protobuf::Variant::Clear();
    }
  }
  user_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProxyState_Property::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }
      
      // optional .paraview_protobuf.Variant value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_user_data;
        break;
      }
      
      // repeated .paraview_protobuf.ProxyState.UserData user_data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_user_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_user_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_user_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProxyState_Property::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // optional .paraview_protobuf.Variant value = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->value(), output);
  }
  
  // repeated .paraview_protobuf.ProxyState.UserData user_data = 3;
  for (int i = 0; i < this->user_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->user_data(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProxyState_Property::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // optional .paraview_protobuf.Variant value = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->value(), target);
  }
  
  // repeated .paraview_protobuf.ProxyState.UserData user_data = 3;
  for (int i = 0; i < this->user_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->user_data(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProxyState_Property::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional .paraview_protobuf.Variant value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->value());
    }
    
  }
  // repeated .paraview_protobuf.ProxyState.UserData user_data = 3;
  total_size += 1 * this->user_data_size();
  for (int i = 0; i < this->user_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->user_data(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyState_Property::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProxyState_Property* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProxyState_Property*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProxyState_Property::MergeFrom(const ProxyState_Property& from) {
  GOOGLE_CHECK_NE(&from, this);
  user_data_.MergeFrom(from.user_data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_name(from.name());
    }
    if (from._has_bit(1)) {
      mutable_value()->::paraview_protobuf::Variant::MergeFrom(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProxyState_Property::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyState_Property::CopyFrom(const ProxyState_Property& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyState_Property::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_value()) {
    if (!this->value().IsInitialized()) return false;
  }
  for (int i = 0; i < user_data_size(); i++) {
    if (!this->user_data(i).IsInitialized()) return false;
  }
  return true;
}

void ProxyState_Property::Swap(ProxyState_Property* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(value_, other->value_);
    user_data_.Swap(&other->user_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProxyState_Property::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProxyState_Property_descriptor_;
  metadata.reflection = ProxyState_Property_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

const ::std::string ProxyState_xml_group_default("");
#ifndef _MSC_VER
const int ProxyState::kXmlGroupFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  ProxyState::xml_group(kXmlGroupFieldNumber, ProxyState_xml_group_default);
const ::std::string ProxyState_xml_name_default("");
#ifndef _MSC_VER
const int ProxyState::kXmlNameFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  ProxyState::xml_name(kXmlNameFieldNumber, ProxyState_xml_name_default);
const ::std::string ProxyState_xml_sub_proxy_name_default("");
#ifndef _MSC_VER
const int ProxyState::kXmlSubProxyNameFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  ProxyState::xml_sub_proxy_name(kXmlSubProxyNameFieldNumber, ProxyState_xml_sub_proxy_name_default);
#ifndef _MSC_VER
const int ProxyState::kPropertyFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyState_Property >, 11, false >
  ProxyState::property(kPropertyFieldNumber, ::paraview_protobuf::ProxyState_Property::default_instance());
#ifndef _MSC_VER
const int ProxyState::kSubproxyFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyState_SubProxy >, 11, false >
  ProxyState::subproxy(kSubproxyFieldNumber, ::paraview_protobuf::ProxyState_SubProxy::default_instance());
#ifndef _MSC_VER
const int ProxyState::kAnnotationFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyState_Annotation >, 11, false >
  ProxyState::annotation(kAnnotationFieldNumber, ::paraview_protobuf::ProxyState_Annotation::default_instance());
#ifndef _MSC_VER
const int ProxyState::kHasAnnotationFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  ProxyState::has_annotation(kHasAnnotationFieldNumber, false);
#ifndef _MSC_VER
const int ProxyState::kUserDataFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyState_UserData >, 11, false >
  ProxyState::user_data(kUserDataFieldNumber, ::paraview_protobuf::ProxyState_UserData::default_instance());
ProxyState::ProxyState()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProxyState::InitAsDefaultInstance() {
}

ProxyState::ProxyState(const ProxyState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProxyState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProxyState::~ProxyState() {
  SharedDtor();
}

void ProxyState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProxyState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProxyState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProxyState_descriptor_;
}

const ProxyState& ProxyState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

ProxyState* ProxyState::default_instance_ = NULL;

ProxyState* ProxyState::New() const {
  return new ProxyState;
}

void ProxyState::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProxyState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ProxyState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProxyState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProxyState::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProxyState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProxyState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProxyState::MergeFrom(const ProxyState& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProxyState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyState::CopyFrom(const ProxyState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyState::IsInitialized() const {
  
  return true;
}

void ProxyState::Swap(ProxyState* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProxyState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProxyState_descriptor_;
  metadata.reflection = ProxyState_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string PXMRegistrationState_Entry::_default_group_;
const ::std::string PXMRegistrationState_Entry::_default_name_;
#ifndef _MSC_VER
const int PXMRegistrationState_Entry::kGroupFieldNumber;
const int PXMRegistrationState_Entry::kNameFieldNumber;
const int PXMRegistrationState_Entry::kGlobalIdFieldNumber;
#endif  // !_MSC_VER

PXMRegistrationState_Entry::PXMRegistrationState_Entry()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PXMRegistrationState_Entry::InitAsDefaultInstance() {
}

PXMRegistrationState_Entry::PXMRegistrationState_Entry(const PXMRegistrationState_Entry& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PXMRegistrationState_Entry::SharedCtor() {
  _cached_size_ = 0;
  group_ = const_cast< ::std::string*>(&_default_group_);
  name_ = const_cast< ::std::string*>(&_default_name_);
  global_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PXMRegistrationState_Entry::~PXMRegistrationState_Entry() {
  SharedDtor();
}

void PXMRegistrationState_Entry::SharedDtor() {
  if (group_ != &_default_group_) {
    delete group_;
  }
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void PXMRegistrationState_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PXMRegistrationState_Entry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PXMRegistrationState_Entry_descriptor_;
}

const PXMRegistrationState_Entry& PXMRegistrationState_Entry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

PXMRegistrationState_Entry* PXMRegistrationState_Entry::default_instance_ = NULL;

PXMRegistrationState_Entry* PXMRegistrationState_Entry::New() const {
  return new PXMRegistrationState_Entry;
}

void PXMRegistrationState_Entry::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (group_ != &_default_group_) {
        group_->clear();
      }
    }
    if (_has_bit(1)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    global_id_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PXMRegistrationState_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string group = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->group().data(), this->group().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_global_id;
        break;
      }
      
      // required uint64 global_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_global_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &global_id_)));
          _set_bit(2);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PXMRegistrationState_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string group = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->group(), output);
  }
  
  // required string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // required uint64 global_id = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->global_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PXMRegistrationState_Entry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string group = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group(), target);
  }
  
  // required string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // required uint64 global_id = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->global_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PXMRegistrationState_Entry::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string group = 1;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group());
    }
    
    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required uint64 global_id = 3;
    if (has_global_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->global_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PXMRegistrationState_Entry::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PXMRegistrationState_Entry* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PXMRegistrationState_Entry*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PXMRegistrationState_Entry::MergeFrom(const PXMRegistrationState_Entry& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_group(from.group());
    }
    if (from._has_bit(1)) {
      set_name(from.name());
    }
    if (from._has_bit(2)) {
      set_global_id(from.global_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PXMRegistrationState_Entry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PXMRegistrationState_Entry::CopyFrom(const PXMRegistrationState_Entry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PXMRegistrationState_Entry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  
  return true;
}

void PXMRegistrationState_Entry::Swap(PXMRegistrationState_Entry* other) {
  if (other != this) {
    std::swap(group_, other->group_);
    std::swap(name_, other->name_);
    std::swap(global_id_, other->global_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PXMRegistrationState_Entry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PXMRegistrationState_Entry_descriptor_;
  metadata.reflection = PXMRegistrationState_Entry_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int PXMRegistrationState::kRegisteredProxyFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::PXMRegistrationState_Entry >, 11, false >
  PXMRegistrationState::registered_proxy(kRegisteredProxyFieldNumber, ::paraview_protobuf::PXMRegistrationState_Entry::default_instance());
#ifndef _MSC_VER
const int PXMRegistrationState::kRegisteredSelectionModelFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::PXMRegistrationState_Entry >, 11, false >
  PXMRegistrationState::registered_selection_model(kRegisteredSelectionModelFieldNumber, ::paraview_protobuf::PXMRegistrationState_Entry::default_instance());
#ifndef _MSC_VER
const int PXMRegistrationState::kRegisteredLinkFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::PXMRegistrationState_Entry >, 11, false >
  PXMRegistrationState::registered_link(kRegisteredLinkFieldNumber, ::paraview_protobuf::PXMRegistrationState_Entry::default_instance());
PXMRegistrationState::PXMRegistrationState()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PXMRegistrationState::InitAsDefaultInstance() {
}

PXMRegistrationState::PXMRegistrationState(const PXMRegistrationState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PXMRegistrationState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PXMRegistrationState::~PXMRegistrationState() {
  SharedDtor();
}

void PXMRegistrationState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PXMRegistrationState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PXMRegistrationState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PXMRegistrationState_descriptor_;
}

const PXMRegistrationState& PXMRegistrationState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

PXMRegistrationState* PXMRegistrationState::default_instance_ = NULL;

PXMRegistrationState* PXMRegistrationState::New() const {
  return new PXMRegistrationState;
}

void PXMRegistrationState::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PXMRegistrationState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PXMRegistrationState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PXMRegistrationState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PXMRegistrationState::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PXMRegistrationState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PXMRegistrationState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PXMRegistrationState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PXMRegistrationState::MergeFrom(const PXMRegistrationState& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PXMRegistrationState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PXMRegistrationState::CopyFrom(const PXMRegistrationState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PXMRegistrationState::IsInitialized() const {
  
  return true;
}

void PXMRegistrationState::Swap(PXMRegistrationState* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PXMRegistrationState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PXMRegistrationState_descriptor_;
  metadata.reflection = PXMRegistrationState_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string ProxyDefinitionState_ProxyXMLDefinition::_default_group_;
const ::std::string ProxyDefinitionState_ProxyXMLDefinition::_default_name_;
const ::std::string ProxyDefinitionState_ProxyXMLDefinition::_default_xml_;
#ifndef _MSC_VER
const int ProxyDefinitionState_ProxyXMLDefinition::kGroupFieldNumber;
const int ProxyDefinitionState_ProxyXMLDefinition::kNameFieldNumber;
const int ProxyDefinitionState_ProxyXMLDefinition::kXmlFieldNumber;
#endif  // !_MSC_VER

ProxyDefinitionState_ProxyXMLDefinition::ProxyDefinitionState_ProxyXMLDefinition()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProxyDefinitionState_ProxyXMLDefinition::InitAsDefaultInstance() {
}

ProxyDefinitionState_ProxyXMLDefinition::ProxyDefinitionState_ProxyXMLDefinition(const ProxyDefinitionState_ProxyXMLDefinition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProxyDefinitionState_ProxyXMLDefinition::SharedCtor() {
  _cached_size_ = 0;
  group_ = const_cast< ::std::string*>(&_default_group_);
  name_ = const_cast< ::std::string*>(&_default_name_);
  xml_ = const_cast< ::std::string*>(&_default_xml_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProxyDefinitionState_ProxyXMLDefinition::~ProxyDefinitionState_ProxyXMLDefinition() {
  SharedDtor();
}

void ProxyDefinitionState_ProxyXMLDefinition::SharedDtor() {
  if (group_ != &_default_group_) {
    delete group_;
  }
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (xml_ != &_default_xml_) {
    delete xml_;
  }
  if (this != default_instance_) {
  }
}

void ProxyDefinitionState_ProxyXMLDefinition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProxyDefinitionState_ProxyXMLDefinition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProxyDefinitionState_ProxyXMLDefinition_descriptor_;
}

const ProxyDefinitionState_ProxyXMLDefinition& ProxyDefinitionState_ProxyXMLDefinition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

ProxyDefinitionState_ProxyXMLDefinition* ProxyDefinitionState_ProxyXMLDefinition::default_instance_ = NULL;

ProxyDefinitionState_ProxyXMLDefinition* ProxyDefinitionState_ProxyXMLDefinition::New() const {
  return new ProxyDefinitionState_ProxyXMLDefinition;
}

void ProxyDefinitionState_ProxyXMLDefinition::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (group_ != &_default_group_) {
        group_->clear();
      }
    }
    if (_has_bit(1)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    if (_has_bit(2)) {
      if (xml_ != &_default_xml_) {
        xml_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProxyDefinitionState_ProxyXMLDefinition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string group = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->group().data(), this->group().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_xml;
        break;
      }
      
      // required string xml = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_xml:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xml()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->xml().data(), this->xml().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProxyDefinitionState_ProxyXMLDefinition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string group = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->group(), output);
  }
  
  // required string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // required string xml = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->xml().data(), this->xml().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->xml(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProxyDefinitionState_ProxyXMLDefinition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string group = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group(), target);
  }
  
  // required string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // required string xml = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->xml().data(), this->xml().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->xml(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProxyDefinitionState_ProxyXMLDefinition::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string group = 1;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group());
    }
    
    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required string xml = 3;
    if (has_xml()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->xml());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyDefinitionState_ProxyXMLDefinition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProxyDefinitionState_ProxyXMLDefinition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProxyDefinitionState_ProxyXMLDefinition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProxyDefinitionState_ProxyXMLDefinition::MergeFrom(const ProxyDefinitionState_ProxyXMLDefinition& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_group(from.group());
    }
    if (from._has_bit(1)) {
      set_name(from.name());
    }
    if (from._has_bit(2)) {
      set_xml(from.xml());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProxyDefinitionState_ProxyXMLDefinition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyDefinitionState_ProxyXMLDefinition::CopyFrom(const ProxyDefinitionState_ProxyXMLDefinition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyDefinitionState_ProxyXMLDefinition::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void ProxyDefinitionState_ProxyXMLDefinition::Swap(ProxyDefinitionState_ProxyXMLDefinition* other) {
  if (other != this) {
    std::swap(group_, other->group_);
    std::swap(name_, other->name_);
    std::swap(xml_, other->xml_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProxyDefinitionState_ProxyXMLDefinition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProxyDefinitionState_ProxyXMLDefinition_descriptor_;
  metadata.reflection = ProxyDefinitionState_ProxyXMLDefinition_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int ProxyDefinitionState::kXmlDefinitionProxyFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition >, 11, false >
  ProxyDefinitionState::xml_definition_proxy(kXmlDefinitionProxyFieldNumber, ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition::default_instance());
#ifndef _MSC_VER
const int ProxyDefinitionState::kXmlCustomDefinitionProxyFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition >, 11, false >
  ProxyDefinitionState::xml_custom_definition_proxy(kXmlCustomDefinitionProxyFieldNumber, ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition::default_instance());
ProxyDefinitionState::ProxyDefinitionState()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProxyDefinitionState::InitAsDefaultInstance() {
}

ProxyDefinitionState::ProxyDefinitionState(const ProxyDefinitionState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProxyDefinitionState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProxyDefinitionState::~ProxyDefinitionState() {
  SharedDtor();
}

void ProxyDefinitionState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProxyDefinitionState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProxyDefinitionState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProxyDefinitionState_descriptor_;
}

const ProxyDefinitionState& ProxyDefinitionState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

ProxyDefinitionState* ProxyDefinitionState::default_instance_ = NULL;

ProxyDefinitionState* ProxyDefinitionState::New() const {
  return new ProxyDefinitionState;
}

void ProxyDefinitionState::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProxyDefinitionState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ProxyDefinitionState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProxyDefinitionState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProxyDefinitionState::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyDefinitionState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProxyDefinitionState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProxyDefinitionState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProxyDefinitionState::MergeFrom(const ProxyDefinitionState& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProxyDefinitionState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyDefinitionState::CopyFrom(const ProxyDefinitionState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyDefinitionState::IsInitialized() const {
  
  return true;
}

void ProxyDefinitionState::Swap(ProxyDefinitionState* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProxyDefinitionState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProxyDefinitionState_descriptor_;
  metadata.reflection = ProxyDefinitionState_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int PullRequest::kArgumentsFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::Variant >, 11, false >
  PullRequest::arguments(kArgumentsFieldNumber, ::paraview_protobuf::Variant::default_instance());
PullRequest::PullRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PullRequest::InitAsDefaultInstance() {
}

PullRequest::PullRequest(const PullRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PullRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PullRequest::~PullRequest() {
  SharedDtor();
}

void PullRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PullRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PullRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PullRequest_descriptor_;
}

const PullRequest& PullRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

PullRequest* PullRequest::default_instance_ = NULL;

PullRequest* PullRequest::New() const {
  return new PullRequest;
}

void PullRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PullRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PullRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PullRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PullRequest::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PullRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PullRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PullRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PullRequest::MergeFrom(const PullRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PullRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullRequest::CopyFrom(const PullRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullRequest::IsInitialized() const {
  
  return true;
}

void PullRequest::Swap(PullRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PullRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PullRequest_descriptor_;
  metadata.reflection = PullRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int ProxySelectionModelState::kCurrentProxyFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  ProxySelectionModelState::current_proxy(kCurrentProxyFieldNumber, 0u);
#ifndef _MSC_VER
const int ProxySelectionModelState::kCurrentPortFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  ProxySelectionModelState::current_port(kCurrentPortFieldNumber, -1);
#ifndef _MSC_VER
const int ProxySelectionModelState::kProxyFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  ProxySelectionModelState::proxy(kProxyFieldNumber, 0u);
#ifndef _MSC_VER
const int ProxySelectionModelState::kPortFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  ProxySelectionModelState::port(kPortFieldNumber, 0);
ProxySelectionModelState::ProxySelectionModelState()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProxySelectionModelState::InitAsDefaultInstance() {
}

ProxySelectionModelState::ProxySelectionModelState(const ProxySelectionModelState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProxySelectionModelState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProxySelectionModelState::~ProxySelectionModelState() {
  SharedDtor();
}

void ProxySelectionModelState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProxySelectionModelState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProxySelectionModelState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProxySelectionModelState_descriptor_;
}

const ProxySelectionModelState& ProxySelectionModelState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

ProxySelectionModelState* ProxySelectionModelState::default_instance_ = NULL;

ProxySelectionModelState* ProxySelectionModelState::New() const {
  return new ProxySelectionModelState;
}

void ProxySelectionModelState::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProxySelectionModelState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ProxySelectionModelState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProxySelectionModelState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProxySelectionModelState::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxySelectionModelState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProxySelectionModelState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProxySelectionModelState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProxySelectionModelState::MergeFrom(const ProxySelectionModelState& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProxySelectionModelState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxySelectionModelState::CopyFrom(const ProxySelectionModelState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxySelectionModelState::IsInitialized() const {
  
  return true;
}

void ProxySelectionModelState::Swap(ProxySelectionModelState* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProxySelectionModelState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProxySelectionModelState_descriptor_;
  metadata.reflection = ProxySelectionModelState_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* LinkState_LinkDescription_Direction_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LinkState_LinkDescription_Direction_descriptor_;
}
bool LinkState_LinkDescription_Direction_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const LinkState_LinkDescription_Direction LinkState_LinkDescription::NONE;
const LinkState_LinkDescription_Direction LinkState_LinkDescription::INPUT;
const LinkState_LinkDescription_Direction LinkState_LinkDescription::OUTPUT;
const LinkState_LinkDescription_Direction LinkState_LinkDescription::Direction_MIN;
const LinkState_LinkDescription_Direction LinkState_LinkDescription::Direction_MAX;
const int LinkState_LinkDescription::Direction_ARRAYSIZE;
#endif  // _MSC_VER
const ::std::string LinkState_LinkDescription::_default_property_name_;
#ifndef _MSC_VER
const int LinkState_LinkDescription::kProxyFieldNumber;
const int LinkState_LinkDescription::kPropertyNameFieldNumber;
const int LinkState_LinkDescription::kDirectionFieldNumber;
#endif  // !_MSC_VER

LinkState_LinkDescription::LinkState_LinkDescription()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LinkState_LinkDescription::InitAsDefaultInstance() {
}

LinkState_LinkDescription::LinkState_LinkDescription(const LinkState_LinkDescription& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LinkState_LinkDescription::SharedCtor() {
  _cached_size_ = 0;
  proxy_ = 0u;
  property_name_ = const_cast< ::std::string*>(&_default_property_name_);
  direction_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LinkState_LinkDescription::~LinkState_LinkDescription() {
  SharedDtor();
}

void LinkState_LinkDescription::SharedDtor() {
  if (property_name_ != &_default_property_name_) {
    delete property_name_;
  }
  if (this != default_instance_) {
  }
}

void LinkState_LinkDescription::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LinkState_LinkDescription::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LinkState_LinkDescription_descriptor_;
}

const LinkState_LinkDescription& LinkState_LinkDescription::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

LinkState_LinkDescription* LinkState_LinkDescription::default_instance_ = NULL;

LinkState_LinkDescription* LinkState_LinkDescription::New() const {
  return new LinkState_LinkDescription;
}

void LinkState_LinkDescription::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    proxy_ = 0u;
    if (_has_bit(1)) {
      if (property_name_ != &_default_property_name_) {
        property_name_->clear();
      }
    }
    direction_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LinkState_LinkDescription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 proxy = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proxy_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_property_name;
        break;
      }
      
      // optional string property_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_property_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_property_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->property_name().data(), this->property_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_direction;
        break;
      }
      
      // required .paraview_protobuf.LinkState.LinkDescription.Direction direction = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_direction:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::paraview_protobuf::LinkState_LinkDescription_Direction_IsValid(value)) {
            set_direction(static_cast< ::paraview_protobuf::LinkState_LinkDescription_Direction >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LinkState_LinkDescription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 proxy = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->proxy(), output);
  }
  
  // optional string property_name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->property_name().data(), this->property_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->property_name(), output);
  }
  
  // required .paraview_protobuf.LinkState.LinkDescription.Direction direction = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->direction(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LinkState_LinkDescription::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 proxy = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->proxy(), target);
  }
  
  // optional string property_name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->property_name().data(), this->property_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->property_name(), target);
  }
  
  // required .paraview_protobuf.LinkState.LinkDescription.Direction direction = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->direction(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LinkState_LinkDescription::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 proxy = 1;
    if (has_proxy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proxy());
    }
    
    // optional string property_name = 2;
    if (has_property_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->property_name());
    }
    
    // required .paraview_protobuf.LinkState.LinkDescription.Direction direction = 3;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LinkState_LinkDescription::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LinkState_LinkDescription* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LinkState_LinkDescription*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LinkState_LinkDescription::MergeFrom(const LinkState_LinkDescription& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_proxy(from.proxy());
    }
    if (from._has_bit(1)) {
      set_property_name(from.property_name());
    }
    if (from._has_bit(2)) {
      set_direction(from.direction());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LinkState_LinkDescription::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkState_LinkDescription::CopyFrom(const LinkState_LinkDescription& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkState_LinkDescription::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  
  return true;
}

void LinkState_LinkDescription::Swap(LinkState_LinkDescription* other) {
  if (other != this) {
    std::swap(proxy_, other->proxy_);
    std::swap(property_name_, other->property_name_);
    std::swap(direction_, other->direction_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LinkState_LinkDescription::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LinkState_LinkDescription_descriptor_;
  metadata.reflection = LinkState_LinkDescription_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int LinkState::kPropagateUpdateFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  LinkState::propagate_update(kPropagateUpdateFieldNumber, true);
#ifndef _MSC_VER
const int LinkState::kEnabledFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  LinkState::enabled(kEnabledFieldNumber, true);
#ifndef _MSC_VER
const int LinkState::kSyncInteractiveRendersFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  LinkState::sync_interactive_renders(kSyncInteractiveRendersFieldNumber, true);
#ifndef _MSC_VER
const int LinkState::kLinkFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::LinkState_LinkDescription >, 11, false >
  LinkState::link(kLinkFieldNumber, ::paraview_protobuf::LinkState_LinkDescription::default_instance());
const ::std::string LinkState_exception_property_default("");
#ifndef _MSC_VER
const int LinkState::kExceptionPropertyFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false >
  LinkState::exception_property(kExceptionPropertyFieldNumber, LinkState_exception_property_default);
LinkState::LinkState()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LinkState::InitAsDefaultInstance() {
}

LinkState::LinkState(const LinkState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LinkState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LinkState::~LinkState() {
  SharedDtor();
}

void LinkState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LinkState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LinkState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LinkState_descriptor_;
}

const LinkState& LinkState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

LinkState* LinkState::default_instance_ = NULL;

LinkState* LinkState::New() const {
  return new LinkState;
}

void LinkState::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LinkState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void LinkState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LinkState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LinkState::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LinkState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LinkState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LinkState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LinkState::MergeFrom(const LinkState& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LinkState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkState::CopyFrom(const LinkState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkState::IsInitialized() const {
  
  return true;
}

void LinkState::Swap(LinkState* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LinkState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LinkState_descriptor_;
  metadata.reflection = LinkState_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MousePointer_Ratio_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MousePointer_Ratio_descriptor_;
}
bool MousePointer_Ratio_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MousePointer_Ratio MousePointer::BOTH;
const MousePointer_Ratio MousePointer::HEIGHT;
const MousePointer_Ratio MousePointer::WIDTH;
const MousePointer_Ratio MousePointer::Ratio_MIN;
const MousePointer_Ratio MousePointer::Ratio_MAX;
const int MousePointer::Ratio_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int MousePointer::kViewFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  MousePointer::view(kViewFieldNumber, 0u);
#ifndef _MSC_VER
const int MousePointer::kXFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1, false >
  MousePointer::x(kXFieldNumber, 0);
#ifndef _MSC_VER
const int MousePointer::kYFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1, false >
  MousePointer::y(kYFieldNumber, 0);
#ifndef _MSC_VER
const int MousePointer::kForceShowFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  MousePointer::forceShow(kForceShowFieldNumber, false);
#ifndef _MSC_VER
const int MousePointer::kRatioTypeFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::EnumTypeTraits< ::paraview_protobuf::MousePointer_Ratio, ::paraview_protobuf::MousePointer_Ratio_IsValid>, 14, false >
  MousePointer::ratioType(kRatioTypeFieldNumber, static_cast< ::paraview_protobuf::MousePointer_Ratio >(1));
MousePointer::MousePointer()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MousePointer::InitAsDefaultInstance() {
}

MousePointer::MousePointer(const MousePointer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MousePointer::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MousePointer::~MousePointer() {
  SharedDtor();
}

void MousePointer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MousePointer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MousePointer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MousePointer_descriptor_;
}

const MousePointer& MousePointer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

MousePointer* MousePointer::default_instance_ = NULL;

MousePointer* MousePointer::New() const {
  return new MousePointer;
}

void MousePointer::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MousePointer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void MousePointer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MousePointer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MousePointer::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MousePointer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MousePointer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MousePointer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MousePointer::MergeFrom(const MousePointer& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MousePointer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MousePointer::CopyFrom(const MousePointer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MousePointer::IsInitialized() const {
  
  return true;
}

void MousePointer::Swap(MousePointer* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MousePointer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MousePointer_descriptor_;
  metadata.reflection = MousePointer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int ChartViewBounds::kViewFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  ChartViewBounds::view(kViewFieldNumber, 0u);
#ifndef _MSC_VER
const int ChartViewBounds::kRangeFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, false >
  ChartViewBounds::range(kRangeFieldNumber, 0);
ChartViewBounds::ChartViewBounds()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ChartViewBounds::InitAsDefaultInstance() {
}

ChartViewBounds::ChartViewBounds(const ChartViewBounds& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ChartViewBounds::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChartViewBounds::~ChartViewBounds() {
  SharedDtor();
}

void ChartViewBounds::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChartViewBounds::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChartViewBounds::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChartViewBounds_descriptor_;
}

const ChartViewBounds& ChartViewBounds::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

ChartViewBounds* ChartViewBounds::default_instance_ = NULL;

ChartViewBounds* ChartViewBounds::New() const {
  return new ChartViewBounds;
}

void ChartViewBounds::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChartViewBounds::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ChartViewBounds::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ChartViewBounds::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ChartViewBounds::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChartViewBounds::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChartViewBounds* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChartViewBounds*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChartViewBounds::MergeFrom(const ChartViewBounds& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChartViewBounds::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChartViewBounds::CopyFrom(const ChartViewBounds& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartViewBounds::IsInitialized() const {
  
  return true;
}

void ChartViewBounds::Swap(ChartViewBounds* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChartViewBounds::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChartViewBounds_descriptor_;
  metadata.reflection = ChartViewBounds_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string ClientsInformation_ClientInfo::_default_name_;
#ifndef _MSC_VER
const int ClientsInformation_ClientInfo::kUserFieldNumber;
const int ClientsInformation_ClientInfo::kNameFieldNumber;
const int ClientsInformation_ClientInfo::kIsMasterFieldNumber;
const int ClientsInformation_ClientInfo::kFollowCamFieldNumber;
#endif  // !_MSC_VER

ClientsInformation_ClientInfo::ClientsInformation_ClientInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClientsInformation_ClientInfo::InitAsDefaultInstance() {
}

ClientsInformation_ClientInfo::ClientsInformation_ClientInfo(const ClientsInformation_ClientInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClientsInformation_ClientInfo::SharedCtor() {
  _cached_size_ = 0;
  user_ = 0u;
  name_ = const_cast< ::std::string*>(&_default_name_);
  is_master_ = false;
  follow_cam_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientsInformation_ClientInfo::~ClientsInformation_ClientInfo() {
  SharedDtor();
}

void ClientsInformation_ClientInfo::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ClientsInformation_ClientInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientsInformation_ClientInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientsInformation_ClientInfo_descriptor_;
}

const ClientsInformation_ClientInfo& ClientsInformation_ClientInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

ClientsInformation_ClientInfo* ClientsInformation_ClientInfo::default_instance_ = NULL;

ClientsInformation_ClientInfo* ClientsInformation_ClientInfo::New() const {
  return new ClientsInformation_ClientInfo;
}

void ClientsInformation_ClientInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    user_ = 0u;
    if (_has_bit(1)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    is_master_ = false;
    follow_cam_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientsInformation_ClientInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 user = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_master;
        break;
      }
      
      // optional bool is_master = 3 [default = false];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_master:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_master_)));
          _set_bit(2);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_follow_cam;
        break;
      }
      
      // optional bool follow_cam = 4 [default = false];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_follow_cam:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &follow_cam_)));
          _set_bit(3);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ClientsInformation_ClientInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 user = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user(), output);
  }
  
  // optional string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // optional bool is_master = 3 [default = false];
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_master(), output);
  }
  
  // optional bool follow_cam = 4 [default = false];
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->follow_cam(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClientsInformation_ClientInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 user = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user(), target);
  }
  
  // optional string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // optional bool is_master = 3 [default = false];
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_master(), target);
  }
  
  // optional bool follow_cam = 4 [default = false];
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->follow_cam(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClientsInformation_ClientInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 user = 1;
    if (has_user()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional bool is_master = 3 [default = false];
    if (has_is_master()) {
      total_size += 1 + 1;
    }
    
    // optional bool follow_cam = 4 [default = false];
    if (has_follow_cam()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientsInformation_ClientInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientsInformation_ClientInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientsInformation_ClientInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientsInformation_ClientInfo::MergeFrom(const ClientsInformation_ClientInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_user(from.user());
    }
    if (from._has_bit(1)) {
      set_name(from.name());
    }
    if (from._has_bit(2)) {
      set_is_master(from.is_master());
    }
    if (from._has_bit(3)) {
      set_follow_cam(from.follow_cam());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientsInformation_ClientInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientsInformation_ClientInfo::CopyFrom(const ClientsInformation_ClientInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientsInformation_ClientInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ClientsInformation_ClientInfo::Swap(ClientsInformation_ClientInfo* other) {
  if (other != this) {
    std::swap(user_, other->user_);
    std::swap(name_, other->name_);
    std::swap(is_master_, other->is_master_);
    std::swap(follow_cam_, other->follow_cam_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientsInformation_ClientInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientsInformation_ClientInfo_descriptor_;
  metadata.reflection = ClientsInformation_ClientInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int ClientsInformation::kUserFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ClientsInformation_ClientInfo >, 11, false >
  ClientsInformation::user(kUserFieldNumber, ::paraview_protobuf::ClientsInformation_ClientInfo::default_instance());
ClientsInformation::ClientsInformation()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClientsInformation::InitAsDefaultInstance() {
}

ClientsInformation::ClientsInformation(const ClientsInformation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClientsInformation::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientsInformation::~ClientsInformation() {
  SharedDtor();
}

void ClientsInformation::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientsInformation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientsInformation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientsInformation_descriptor_;
}

const ClientsInformation& ClientsInformation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

ClientsInformation* ClientsInformation::default_instance_ = NULL;

ClientsInformation* ClientsInformation::New() const {
  return new ClientsInformation;
}

void ClientsInformation::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientsInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ClientsInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClientsInformation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClientsInformation::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientsInformation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientsInformation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientsInformation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientsInformation::MergeFrom(const ClientsInformation& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientsInformation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientsInformation::CopyFrom(const ClientsInformation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientsInformation::IsInitialized() const {
  
  return true;
}

void ClientsInformation::Swap(ClientsInformation* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientsInformation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientsInformation_descriptor_;
  metadata.reflection = ClientsInformation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int ChatMessage::kAuthorFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
  ChatMessage::author(kAuthorFieldNumber, 0u);
const ::std::string ChatMessage_txt_default("");
#ifndef _MSC_VER
const int ChatMessage::kTxtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  ChatMessage::txt(kTxtFieldNumber, ChatMessage_txt_default);
ChatMessage::ChatMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ChatMessage::InitAsDefaultInstance() {
}

ChatMessage::ChatMessage(const ChatMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ChatMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChatMessage::~ChatMessage() {
  SharedDtor();
}

void ChatMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChatMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatMessage_descriptor_;
}

const ChatMessage& ChatMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

ChatMessage* ChatMessage::default_instance_ = NULL;

ChatMessage* ChatMessage::New() const {
  return new ChatMessage;
}

void ChatMessage::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChatMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ChatMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ChatMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ChatMessage::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChatMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChatMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChatMessage::MergeFrom(const ChatMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChatMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMessage::CopyFrom(const ChatMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMessage::IsInitialized() const {
  
  return true;
}

void ChatMessage::Swap(ChatMessage* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChatMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatMessage_descriptor_;
  metadata.reflection = ChatMessage_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* QtEvent_QtEventType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QtEvent_QtEventType_descriptor_;
}
bool QtEvent_QtEventType_IsValid(int value) {
  switch(value) {
    case 1:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const QtEvent_QtEventType QtEvent::CHAT;
const QtEvent_QtEventType QtEvent::OTHER;
const QtEvent_QtEventType QtEvent::QtEventType_MIN;
const QtEvent_QtEventType QtEvent::QtEventType_MAX;
const int QtEvent::QtEventType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int QtEvent::kTypeFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
    ::google::protobuf::internal::EnumTypeTraits< ::paraview_protobuf::QtEvent_QtEventType, ::paraview_protobuf::QtEvent_QtEventType_IsValid>, 14, false >
  QtEvent::type(kTypeFieldNumber, static_cast< ::paraview_protobuf::QtEvent_QtEventType >(1));
QtEvent::QtEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void QtEvent::InitAsDefaultInstance() {
}

QtEvent::QtEvent(const QtEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void QtEvent::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QtEvent::~QtEvent() {
  SharedDtor();
}

void QtEvent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QtEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QtEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QtEvent_descriptor_;
}

const QtEvent& QtEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vtkPVMessage_2eproto();  return *default_instance_;
}

QtEvent* QtEvent::default_instance_ = NULL;

QtEvent* QtEvent::New() const {
  return new QtEvent;
}

void QtEvent::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QtEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void QtEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* QtEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int QtEvent::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QtEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QtEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QtEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QtEvent::MergeFrom(const QtEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QtEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QtEvent::CopyFrom(const QtEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QtEvent::IsInitialized() const {
  
  return true;
}

void QtEvent::Swap(QtEvent* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QtEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QtEvent_descriptor_;
  metadata.reflection = QtEvent_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace paraview_protobuf

// @@protoc_insertion_point(global_scope)
