// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vtkPVMessage.proto

#ifndef PROTOBUF_vtkPVMessage_2eproto__INCLUDED
#define PROTOBUF_vtkPVMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace paraview_protobuf {

// Internal implementation detail -- do not call these.
void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
void protobuf_AssignDesc_vtkPVMessage_2eproto();
void protobuf_ShutdownFile_vtkPVMessage_2eproto();

class Variant;
class VariantList;
class MessageCollection;
class Message;
class DefinitionHeader;
class ProxyState;
class ProxyState_SubProxy;
class ProxyState_Annotation;
class ProxyState_UserData;
class ProxyState_Property;
class PXMRegistrationState;
class PXMRegistrationState_Entry;
class ProxyDefinitionState;
class ProxyDefinitionState_ProxyXMLDefinition;
class PullRequest;
class ProxySelectionModelState;
class LinkState;
class LinkState_LinkDescription;
class MousePointer;
class ChartViewBounds;
class ClientsInformation;
class ClientsInformation_ClientInfo;
class ChatMessage;
class QtEvent;

enum Variant_Type {
  Variant_Type_INT = 0,
  Variant_Type_FLOAT64 = 1,
  Variant_Type_IDTYPE = 2,
  Variant_Type_STRING = 3,
  Variant_Type_PROXY = 4,
  Variant_Type_INPUT = 5,
  Variant_Type_BYTES = 6,
  Variant_Type_MAP = 7
};
VTKPVSERVERIMPLEMENTATIONCORE_EXPORT bool Variant_Type_IsValid(int value);
const Variant_Type Variant_Type_Type_MIN = Variant_Type_INT;
const Variant_Type Variant_Type_Type_MAX = Variant_Type_MAP;
const int Variant_Type_Type_ARRAYSIZE = Variant_Type_Type_MAX + 1;

VTKPVSERVERIMPLEMENTATIONCORE_EXPORT const ::google::protobuf::EnumDescriptor* Variant_Type_descriptor();
inline const ::std::string& Variant_Type_Name(Variant_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Variant_Type_descriptor(), value);
}
inline bool Variant_Type_Parse(
    const ::std::string& name, Variant_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Variant_Type>(
    Variant_Type_descriptor(), name, value);
}
enum LinkState_LinkDescription_Direction {
  LinkState_LinkDescription_Direction_NONE = 0,
  LinkState_LinkDescription_Direction_INPUT = 1,
  LinkState_LinkDescription_Direction_OUTPUT = 2
};
VTKPVSERVERIMPLEMENTATIONCORE_EXPORT bool LinkState_LinkDescription_Direction_IsValid(int value);
const LinkState_LinkDescription_Direction LinkState_LinkDescription_Direction_Direction_MIN = LinkState_LinkDescription_Direction_NONE;
const LinkState_LinkDescription_Direction LinkState_LinkDescription_Direction_Direction_MAX = LinkState_LinkDescription_Direction_OUTPUT;
const int LinkState_LinkDescription_Direction_Direction_ARRAYSIZE = LinkState_LinkDescription_Direction_Direction_MAX + 1;

VTKPVSERVERIMPLEMENTATIONCORE_EXPORT const ::google::protobuf::EnumDescriptor* LinkState_LinkDescription_Direction_descriptor();
inline const ::std::string& LinkState_LinkDescription_Direction_Name(LinkState_LinkDescription_Direction value) {
  return ::google::protobuf::internal::NameOfEnum(
    LinkState_LinkDescription_Direction_descriptor(), value);
}
inline bool LinkState_LinkDescription_Direction_Parse(
    const ::std::string& name, LinkState_LinkDescription_Direction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LinkState_LinkDescription_Direction>(
    LinkState_LinkDescription_Direction_descriptor(), name, value);
}
enum MousePointer_Ratio {
  MousePointer_Ratio_BOTH = 0,
  MousePointer_Ratio_HEIGHT = 1,
  MousePointer_Ratio_WIDTH = 2
};
VTKPVSERVERIMPLEMENTATIONCORE_EXPORT bool MousePointer_Ratio_IsValid(int value);
const MousePointer_Ratio MousePointer_Ratio_Ratio_MIN = MousePointer_Ratio_BOTH;
const MousePointer_Ratio MousePointer_Ratio_Ratio_MAX = MousePointer_Ratio_WIDTH;
const int MousePointer_Ratio_Ratio_ARRAYSIZE = MousePointer_Ratio_Ratio_MAX + 1;

VTKPVSERVERIMPLEMENTATIONCORE_EXPORT const ::google::protobuf::EnumDescriptor* MousePointer_Ratio_descriptor();
inline const ::std::string& MousePointer_Ratio_Name(MousePointer_Ratio value) {
  return ::google::protobuf::internal::NameOfEnum(
    MousePointer_Ratio_descriptor(), value);
}
inline bool MousePointer_Ratio_Parse(
    const ::std::string& name, MousePointer_Ratio* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MousePointer_Ratio>(
    MousePointer_Ratio_descriptor(), name, value);
}
enum QtEvent_QtEventType {
  QtEvent_QtEventType_CHAT = 1,
  QtEvent_QtEventType_OTHER = 3
};
VTKPVSERVERIMPLEMENTATIONCORE_EXPORT bool QtEvent_QtEventType_IsValid(int value);
const QtEvent_QtEventType QtEvent_QtEventType_QtEventType_MIN = QtEvent_QtEventType_CHAT;
const QtEvent_QtEventType QtEvent_QtEventType_QtEventType_MAX = QtEvent_QtEventType_OTHER;
const int QtEvent_QtEventType_QtEventType_ARRAYSIZE = QtEvent_QtEventType_QtEventType_MAX + 1;

VTKPVSERVERIMPLEMENTATIONCORE_EXPORT const ::google::protobuf::EnumDescriptor* QtEvent_QtEventType_descriptor();
inline const ::std::string& QtEvent_QtEventType_Name(QtEvent_QtEventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    QtEvent_QtEventType_descriptor(), value);
}
inline bool QtEvent_QtEventType_Parse(
    const ::std::string& name, QtEvent_QtEventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QtEvent_QtEventType>(
    QtEvent_QtEventType_descriptor(), name, value);
}
// ===================================================================

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT Variant : public ::google::protobuf::Message {
 public:
  Variant();
  virtual ~Variant();
  
  Variant(const Variant& from);
  
  inline Variant& operator=(const Variant& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Variant& default_instance();
  
  void Swap(Variant* other);
  
  // implements Message ----------------------------------------------
  
  Variant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Variant& from);
  void MergeFrom(const Variant& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Variant_Type Type;
  static const Type INT = Variant_Type_INT;
  static const Type FLOAT64 = Variant_Type_FLOAT64;
  static const Type IDTYPE = Variant_Type_IDTYPE;
  static const Type STRING = Variant_Type_STRING;
  static const Type PROXY = Variant_Type_PROXY;
  static const Type INPUT = Variant_Type_INPUT;
  static const Type BYTES = Variant_Type_BYTES;
  static const Type MAP = Variant_Type_MAP;
  static inline bool Type_IsValid(int value) {
    return Variant_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Variant_Type_Type_MIN;
  static const Type Type_MAX =
    Variant_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Variant_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Variant_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Variant_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Variant_Type_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .paraview_protobuf.Variant.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::paraview_protobuf::Variant_Type type() const;
  inline void set_type(::paraview_protobuf::Variant_Type value);
  
  // repeated sint64 idtype = 3;
  inline int idtype_size() const;
  inline void clear_idtype();
  static const int kIdtypeFieldNumber = 3;
  inline ::google::protobuf::int64 idtype(int index) const;
  inline void set_idtype(int index, ::google::protobuf::int64 value);
  inline void add_idtype(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      idtype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_idtype();
  
  // repeated sint32 integer = 4;
  inline int integer_size() const;
  inline void clear_integer();
  static const int kIntegerFieldNumber = 4;
  inline ::google::protobuf::int32 integer(int index) const;
  inline void set_integer(int index, ::google::protobuf::int32 value);
  inline void add_integer(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      integer() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_integer();
  
  // repeated double float64 = 5;
  inline int float64_size() const;
  inline void clear_float64();
  static const int kFloat64FieldNumber = 5;
  inline double float64(int index) const;
  inline void set_float64(int index, double value);
  inline void add_float64(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      float64() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_float64();
  
  // repeated uint64 proxy_global_id = 6;
  inline int proxy_global_id_size() const;
  inline void clear_proxy_global_id();
  static const int kProxyGlobalIdFieldNumber = 6;
  inline ::google::protobuf::uint64 proxy_global_id(int index) const;
  inline void set_proxy_global_id(int index, ::google::protobuf::uint64 value);
  inline void add_proxy_global_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      proxy_global_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_proxy_global_id();
  
  // repeated int32 port_number = 7;
  inline int port_number_size() const;
  inline void clear_port_number();
  static const int kPortNumberFieldNumber = 7;
  inline ::google::protobuf::int32 port_number(int index) const;
  inline void set_port_number(int index, ::google::protobuf::int32 value);
  inline void add_port_number(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      port_number() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_port_number();
  
  // repeated string txt = 8;
  inline int txt_size() const;
  inline void clear_txt();
  static const int kTxtFieldNumber = 8;
  inline const ::std::string& txt(int index) const;
  inline ::std::string* mutable_txt(int index);
  inline void set_txt(int index, const ::std::string& value);
  inline void set_txt(int index, const char* value);
  inline void set_txt(int index, const char* value, size_t size);
  inline ::std::string* add_txt();
  inline void add_txt(const ::std::string& value);
  inline void add_txt(const char* value);
  inline void add_txt(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& txt() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_txt();
  
  // repeated bytes binary = 9;
  inline int binary_size() const;
  inline void clear_binary();
  static const int kBinaryFieldNumber = 9;
  inline const ::std::string& binary(int index) const;
  inline ::std::string* mutable_binary(int index);
  inline void set_binary(int index, const ::std::string& value);
  inline void set_binary(int index, const char* value);
  inline void set_binary(int index, const void* value, size_t size);
  inline ::std::string* add_binary();
  inline void add_binary(const ::std::string& value);
  inline void add_binary(const char* value);
  inline void add_binary(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& binary() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_binary();
  
  // @@protoc_insertion_point(class_scope:paraview_protobuf.Variant)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > idtype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > integer_;
  ::google::protobuf::RepeatedField< double > float64_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > proxy_global_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > port_number_;
  ::google::protobuf::RepeatedPtrField< ::std::string> txt_;
  ::google::protobuf::RepeatedPtrField< ::std::string> binary_;
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Variant* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT VariantList : public ::google::protobuf::Message {
 public:
  VariantList();
  virtual ~VariantList();
  
  VariantList(const VariantList& from);
  
  inline VariantList& operator=(const VariantList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const VariantList& default_instance();
  
  void Swap(VariantList* other);
  
  // implements Message ----------------------------------------------
  
  VariantList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VariantList& from);
  void MergeFrom(const VariantList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .paraview_protobuf.Variant variant = 1;
  inline int variant_size() const;
  inline void clear_variant();
  static const int kVariantFieldNumber = 1;
  inline const ::paraview_protobuf::Variant& variant(int index) const;
  inline ::paraview_protobuf::Variant* mutable_variant(int index);
  inline ::paraview_protobuf::Variant* add_variant();
  inline const ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Variant >&
      variant() const;
  inline ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Variant >*
      mutable_variant();
  
  // @@protoc_insertion_point(class_scope:paraview_protobuf.VariantList)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Variant > variant_;
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static VariantList* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT MessageCollection : public ::google::protobuf::Message {
 public:
  MessageCollection();
  virtual ~MessageCollection();
  
  MessageCollection(const MessageCollection& from);
  
  inline MessageCollection& operator=(const MessageCollection& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageCollection& default_instance();
  
  void Swap(MessageCollection* other);
  
  // implements Message ----------------------------------------------
  
  MessageCollection* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageCollection& from);
  void MergeFrom(const MessageCollection& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .paraview_protobuf.Message item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::paraview_protobuf::Message& item(int index) const;
  inline ::paraview_protobuf::Message* mutable_item(int index);
  inline ::paraview_protobuf::Message* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Message >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Message >*
      mutable_item();
  
  // @@protoc_insertion_point(class_scope:paraview_protobuf.MessageCollection)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Message > item_;
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MessageCollection* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT Message : public ::google::protobuf::Message {
 public:
  Message();
  virtual ~Message();
  
  Message(const Message& from);
  
  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();
  
  void Swap(Message* other);
  
  // implements Message ----------------------------------------------
  
  Message* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 global_id = 1;
  inline bool has_global_id() const;
  inline void clear_global_id();
  static const int kGlobalIdFieldNumber = 1;
  inline ::google::protobuf::uint64 global_id() const;
  inline void set_global_id(::google::protobuf::uint64 value);
  
  // required uint32 location = 2;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 2;
  inline ::google::protobuf::uint32 location() const;
  inline void set_location(::google::protobuf::uint32 value);
  
  // optional bool share_only = 3 [default = false];
  inline bool has_share_only() const;
  inline void clear_share_only();
  static const int kShareOnlyFieldNumber = 3;
  inline bool share_only() const;
  inline void set_share_only(bool value);
  
  // optional bool req_def = 4 [default = false];
  inline bool has_req_def() const;
  inline void clear_req_def();
  static const int kReqDefFieldNumber = 4;
  inline bool req_def() const;
  inline void set_req_def(bool value);
  
  // optional uint32 client_id = 5 [default = 0];
  inline bool has_client_id() const;
  inline void clear_client_id();
  static const int kClientIdFieldNumber = 5;
  inline ::google::protobuf::uint32 client_id() const;
  inline void set_client_id(::google::protobuf::uint32 value);
  
  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(Message)
  // @@protoc_insertion_point(class_scope:paraview_protobuf.Message)
 private:
  ::google::protobuf::internal::ExtensionSet _extensions_;
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 global_id_;
  ::google::protobuf::uint32 location_;
  bool share_only_;
  bool req_def_;
  ::google::protobuf::uint32 client_id_;
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Message* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT DefinitionHeader : public ::google::protobuf::Message {
 public:
  DefinitionHeader();
  virtual ~DefinitionHeader();
  
  DefinitionHeader(const DefinitionHeader& from);
  
  inline DefinitionHeader& operator=(const DefinitionHeader& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DefinitionHeader& default_instance();
  
  void Swap(DefinitionHeader* other);
  
  // implements Message ----------------------------------------------
  
  DefinitionHeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DefinitionHeader& from);
  void MergeFrom(const DefinitionHeader& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  static const int kClientClassFieldNumber = 10;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::StringTypeTraits, 9, false >
    client_class;
  static const int kServerClassFieldNumber = 11;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::StringTypeTraits, 9, false >
    server_class;
  // @@protoc_insertion_point(class_scope:paraview_protobuf.DefinitionHeader)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DefinitionHeader* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT ProxyState_SubProxy : public ::google::protobuf::Message {
 public:
  ProxyState_SubProxy();
  virtual ~ProxyState_SubProxy();
  
  ProxyState_SubProxy(const ProxyState_SubProxy& from);
  
  inline ProxyState_SubProxy& operator=(const ProxyState_SubProxy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyState_SubProxy& default_instance();
  
  void Swap(ProxyState_SubProxy* other);
  
  // implements Message ----------------------------------------------
  
  ProxyState_SubProxy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxyState_SubProxy& from);
  void MergeFrom(const ProxyState_SubProxy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // required uint32 global_id = 2;
  inline bool has_global_id() const;
  inline void clear_global_id();
  static const int kGlobalIdFieldNumber = 2;
  inline ::google::protobuf::uint32 global_id() const;
  inline void set_global_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:paraview_protobuf.ProxyState.SubProxy)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 global_id_;
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProxyState_SubProxy* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT ProxyState_Annotation : public ::google::protobuf::Message {
 public:
  ProxyState_Annotation();
  virtual ~ProxyState_Annotation();
  
  ProxyState_Annotation(const ProxyState_Annotation& from);
  
  inline ProxyState_Annotation& operator=(const ProxyState_Annotation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyState_Annotation& default_instance();
  
  void Swap(ProxyState_Annotation* other);
  
  // implements Message ----------------------------------------------
  
  ProxyState_Annotation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxyState_Annotation& from);
  void MergeFrom(const ProxyState_Annotation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  
  // required string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  
  // @@protoc_insertion_point(class_scope:paraview_protobuf.ProxyState.Annotation)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* key_;
  static const ::std::string _default_key_;
  ::std::string* value_;
  static const ::std::string _default_value_;
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProxyState_Annotation* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT ProxyState_UserData : public ::google::protobuf::Message {
 public:
  ProxyState_UserData();
  virtual ~ProxyState_UserData();
  
  ProxyState_UserData(const ProxyState_UserData& from);
  
  inline ProxyState_UserData& operator=(const ProxyState_UserData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyState_UserData& default_instance();
  
  void Swap(ProxyState_UserData* other);
  
  // implements Message ----------------------------------------------
  
  ProxyState_UserData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxyState_UserData& from);
  void MergeFrom(const ProxyState_UserData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  
  // repeated .paraview_protobuf.Variant variant = 2;
  inline int variant_size() const;
  inline void clear_variant();
  static const int kVariantFieldNumber = 2;
  inline const ::paraview_protobuf::Variant& variant(int index) const;
  inline ::paraview_protobuf::Variant* mutable_variant(int index);
  inline ::paraview_protobuf::Variant* add_variant();
  inline const ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Variant >&
      variant() const;
  inline ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Variant >*
      mutable_variant();
  
  // @@protoc_insertion_point(class_scope:paraview_protobuf.ProxyState.UserData)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* key_;
  static const ::std::string _default_key_;
  ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Variant > variant_;
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProxyState_UserData* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT ProxyState_Property : public ::google::protobuf::Message {
 public:
  ProxyState_Property();
  virtual ~ProxyState_Property();
  
  ProxyState_Property(const ProxyState_Property& from);
  
  inline ProxyState_Property& operator=(const ProxyState_Property& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyState_Property& default_instance();
  
  void Swap(ProxyState_Property* other);
  
  // implements Message ----------------------------------------------
  
  ProxyState_Property* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxyState_Property& from);
  void MergeFrom(const ProxyState_Property& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional .paraview_protobuf.Variant value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::paraview_protobuf::Variant& value() const;
  inline ::paraview_protobuf::Variant* mutable_value();
  
  // repeated .paraview_protobuf.ProxyState.UserData user_data = 3;
  inline int user_data_size() const;
  inline void clear_user_data();
  static const int kUserDataFieldNumber = 3;
  inline const ::paraview_protobuf::ProxyState_UserData& user_data(int index) const;
  inline ::paraview_protobuf::ProxyState_UserData* mutable_user_data(int index);
  inline ::paraview_protobuf::ProxyState_UserData* add_user_data();
  inline const ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::ProxyState_UserData >&
      user_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::ProxyState_UserData >*
      mutable_user_data();
  
  // @@protoc_insertion_point(class_scope:paraview_protobuf.ProxyState.Property)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::paraview_protobuf::Variant* value_;
  ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::ProxyState_UserData > user_data_;
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProxyState_Property* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT ProxyState : public ::google::protobuf::Message {
 public:
  ProxyState();
  virtual ~ProxyState();
  
  ProxyState(const ProxyState& from);
  
  inline ProxyState& operator=(const ProxyState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyState& default_instance();
  
  void Swap(ProxyState* other);
  
  // implements Message ----------------------------------------------
  
  ProxyState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxyState& from);
  void MergeFrom(const ProxyState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ProxyState_SubProxy SubProxy;
  typedef ProxyState_Annotation Annotation;
  typedef ProxyState_UserData UserData;
  typedef ProxyState_Property Property;
  
  // accessors -------------------------------------------------------
  
  static const int kXmlGroupFieldNumber = 20;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::StringTypeTraits, 9, false >
    xml_group;
  static const int kXmlNameFieldNumber = 21;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::StringTypeTraits, 9, false >
    xml_name;
  static const int kXmlSubProxyNameFieldNumber = 22;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::StringTypeTraits, 9, false >
    xml_sub_proxy_name;
  static const int kPropertyFieldNumber = 23;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyState_Property >, 11, false >
    property;
  static const int kSubproxyFieldNumber = 24;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyState_SubProxy >, 11, false >
    subproxy;
  static const int kAnnotationFieldNumber = 25;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyState_Annotation >, 11, false >
    annotation;
  static const int kHasAnnotationFieldNumber = 26;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
    has_annotation;
  static const int kUserDataFieldNumber = 27;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyState_UserData >, 11, false >
    user_data;
  // @@protoc_insertion_point(class_scope:paraview_protobuf.ProxyState)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProxyState* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT PXMRegistrationState_Entry : public ::google::protobuf::Message {
 public:
  PXMRegistrationState_Entry();
  virtual ~PXMRegistrationState_Entry();
  
  PXMRegistrationState_Entry(const PXMRegistrationState_Entry& from);
  
  inline PXMRegistrationState_Entry& operator=(const PXMRegistrationState_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PXMRegistrationState_Entry& default_instance();
  
  void Swap(PXMRegistrationState_Entry* other);
  
  // implements Message ----------------------------------------------
  
  PXMRegistrationState_Entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PXMRegistrationState_Entry& from);
  void MergeFrom(const PXMRegistrationState_Entry& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string group = 1;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 1;
  inline const ::std::string& group() const;
  inline void set_group(const ::std::string& value);
  inline void set_group(const char* value);
  inline void set_group(const char* value, size_t size);
  inline ::std::string* mutable_group();
  
  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // required uint64 global_id = 3;
  inline bool has_global_id() const;
  inline void clear_global_id();
  static const int kGlobalIdFieldNumber = 3;
  inline ::google::protobuf::uint64 global_id() const;
  inline void set_global_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:paraview_protobuf.PXMRegistrationState.Entry)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* group_;
  static const ::std::string _default_group_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint64 global_id_;
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PXMRegistrationState_Entry* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT PXMRegistrationState : public ::google::protobuf::Message {
 public:
  PXMRegistrationState();
  virtual ~PXMRegistrationState();
  
  PXMRegistrationState(const PXMRegistrationState& from);
  
  inline PXMRegistrationState& operator=(const PXMRegistrationState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PXMRegistrationState& default_instance();
  
  void Swap(PXMRegistrationState* other);
  
  // implements Message ----------------------------------------------
  
  PXMRegistrationState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PXMRegistrationState& from);
  void MergeFrom(const PXMRegistrationState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef PXMRegistrationState_Entry Entry;
  
  // accessors -------------------------------------------------------
  
  static const int kRegisteredProxyFieldNumber = 30;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::PXMRegistrationState_Entry >, 11, false >
    registered_proxy;
  static const int kRegisteredSelectionModelFieldNumber = 31;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::PXMRegistrationState_Entry >, 11, false >
    registered_selection_model;
  static const int kRegisteredLinkFieldNumber = 32;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::PXMRegistrationState_Entry >, 11, false >
    registered_link;
  // @@protoc_insertion_point(class_scope:paraview_protobuf.PXMRegistrationState)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PXMRegistrationState* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT ProxyDefinitionState_ProxyXMLDefinition : public ::google::protobuf::Message {
 public:
  ProxyDefinitionState_ProxyXMLDefinition();
  virtual ~ProxyDefinitionState_ProxyXMLDefinition();
  
  ProxyDefinitionState_ProxyXMLDefinition(const ProxyDefinitionState_ProxyXMLDefinition& from);
  
  inline ProxyDefinitionState_ProxyXMLDefinition& operator=(const ProxyDefinitionState_ProxyXMLDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyDefinitionState_ProxyXMLDefinition& default_instance();
  
  void Swap(ProxyDefinitionState_ProxyXMLDefinition* other);
  
  // implements Message ----------------------------------------------
  
  ProxyDefinitionState_ProxyXMLDefinition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxyDefinitionState_ProxyXMLDefinition& from);
  void MergeFrom(const ProxyDefinitionState_ProxyXMLDefinition& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string group = 1;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 1;
  inline const ::std::string& group() const;
  inline void set_group(const ::std::string& value);
  inline void set_group(const char* value);
  inline void set_group(const char* value, size_t size);
  inline ::std::string* mutable_group();
  
  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // required string xml = 3;
  inline bool has_xml() const;
  inline void clear_xml();
  static const int kXmlFieldNumber = 3;
  inline const ::std::string& xml() const;
  inline void set_xml(const ::std::string& value);
  inline void set_xml(const char* value);
  inline void set_xml(const char* value, size_t size);
  inline ::std::string* mutable_xml();
  
  // @@protoc_insertion_point(class_scope:paraview_protobuf.ProxyDefinitionState.ProxyXMLDefinition)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* group_;
  static const ::std::string _default_group_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* xml_;
  static const ::std::string _default_xml_;
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProxyDefinitionState_ProxyXMLDefinition* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT ProxyDefinitionState : public ::google::protobuf::Message {
 public:
  ProxyDefinitionState();
  virtual ~ProxyDefinitionState();
  
  ProxyDefinitionState(const ProxyDefinitionState& from);
  
  inline ProxyDefinitionState& operator=(const ProxyDefinitionState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyDefinitionState& default_instance();
  
  void Swap(ProxyDefinitionState* other);
  
  // implements Message ----------------------------------------------
  
  ProxyDefinitionState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxyDefinitionState& from);
  void MergeFrom(const ProxyDefinitionState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ProxyDefinitionState_ProxyXMLDefinition ProxyXMLDefinition;
  
  // accessors -------------------------------------------------------
  
  static const int kXmlDefinitionProxyFieldNumber = 35;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition >, 11, false >
    xml_definition_proxy;
  static const int kXmlCustomDefinitionProxyFieldNumber = 36;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ProxyDefinitionState_ProxyXMLDefinition >, 11, false >
    xml_custom_definition_proxy;
  // @@protoc_insertion_point(class_scope:paraview_protobuf.ProxyDefinitionState)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProxyDefinitionState* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT PullRequest : public ::google::protobuf::Message {
 public:
  PullRequest();
  virtual ~PullRequest();
  
  PullRequest(const PullRequest& from);
  
  inline PullRequest& operator=(const PullRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PullRequest& default_instance();
  
  void Swap(PullRequest* other);
  
  // implements Message ----------------------------------------------
  
  PullRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PullRequest& from);
  void MergeFrom(const PullRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  static const int kArgumentsFieldNumber = 40;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::Variant >, 11, false >
    arguments;
  // @@protoc_insertion_point(class_scope:paraview_protobuf.PullRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PullRequest* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT ProxySelectionModelState : public ::google::protobuf::Message {
 public:
  ProxySelectionModelState();
  virtual ~ProxySelectionModelState();
  
  ProxySelectionModelState(const ProxySelectionModelState& from);
  
  inline ProxySelectionModelState& operator=(const ProxySelectionModelState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxySelectionModelState& default_instance();
  
  void Swap(ProxySelectionModelState* other);
  
  // implements Message ----------------------------------------------
  
  ProxySelectionModelState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxySelectionModelState& from);
  void MergeFrom(const ProxySelectionModelState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  static const int kCurrentProxyFieldNumber = 52;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
    current_proxy;
  static const int kCurrentPortFieldNumber = 53;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
    current_port;
  static const int kProxyFieldNumber = 50;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
    proxy;
  static const int kPortFieldNumber = 51;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
    port;
  // @@protoc_insertion_point(class_scope:paraview_protobuf.ProxySelectionModelState)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProxySelectionModelState* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT LinkState_LinkDescription : public ::google::protobuf::Message {
 public:
  LinkState_LinkDescription();
  virtual ~LinkState_LinkDescription();
  
  LinkState_LinkDescription(const LinkState_LinkDescription& from);
  
  inline LinkState_LinkDescription& operator=(const LinkState_LinkDescription& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LinkState_LinkDescription& default_instance();
  
  void Swap(LinkState_LinkDescription* other);
  
  // implements Message ----------------------------------------------
  
  LinkState_LinkDescription* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LinkState_LinkDescription& from);
  void MergeFrom(const LinkState_LinkDescription& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef LinkState_LinkDescription_Direction Direction;
  static const Direction NONE = LinkState_LinkDescription_Direction_NONE;
  static const Direction INPUT = LinkState_LinkDescription_Direction_INPUT;
  static const Direction OUTPUT = LinkState_LinkDescription_Direction_OUTPUT;
  static inline bool Direction_IsValid(int value) {
    return LinkState_LinkDescription_Direction_IsValid(value);
  }
  static const Direction Direction_MIN =
    LinkState_LinkDescription_Direction_Direction_MIN;
  static const Direction Direction_MAX =
    LinkState_LinkDescription_Direction_Direction_MAX;
  static const int Direction_ARRAYSIZE =
    LinkState_LinkDescription_Direction_Direction_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Direction_descriptor() {
    return LinkState_LinkDescription_Direction_descriptor();
  }
  static inline const ::std::string& Direction_Name(Direction value) {
    return LinkState_LinkDescription_Direction_Name(value);
  }
  static inline bool Direction_Parse(const ::std::string& name,
      Direction* value) {
    return LinkState_LinkDescription_Direction_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required uint32 proxy = 1;
  inline bool has_proxy() const;
  inline void clear_proxy();
  static const int kProxyFieldNumber = 1;
  inline ::google::protobuf::uint32 proxy() const;
  inline void set_proxy(::google::protobuf::uint32 value);
  
  // optional string property_name = 2;
  inline bool has_property_name() const;
  inline void clear_property_name();
  static const int kPropertyNameFieldNumber = 2;
  inline const ::std::string& property_name() const;
  inline void set_property_name(const ::std::string& value);
  inline void set_property_name(const char* value);
  inline void set_property_name(const char* value, size_t size);
  inline ::std::string* mutable_property_name();
  
  // required .paraview_protobuf.LinkState.LinkDescription.Direction direction = 3;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 3;
  inline ::paraview_protobuf::LinkState_LinkDescription_Direction direction() const;
  inline void set_direction(::paraview_protobuf::LinkState_LinkDescription_Direction value);
  
  // @@protoc_insertion_point(class_scope:paraview_protobuf.LinkState.LinkDescription)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 proxy_;
  ::std::string* property_name_;
  static const ::std::string _default_property_name_;
  int direction_;
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static LinkState_LinkDescription* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT LinkState : public ::google::protobuf::Message {
 public:
  LinkState();
  virtual ~LinkState();
  
  LinkState(const LinkState& from);
  
  inline LinkState& operator=(const LinkState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LinkState& default_instance();
  
  void Swap(LinkState* other);
  
  // implements Message ----------------------------------------------
  
  LinkState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LinkState& from);
  void MergeFrom(const LinkState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef LinkState_LinkDescription LinkDescription;
  
  // accessors -------------------------------------------------------
  
  static const int kPropagateUpdateFieldNumber = 60;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
    propagate_update;
  static const int kEnabledFieldNumber = 61;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
    enabled;
  static const int kSyncInteractiveRendersFieldNumber = 62;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
    sync_interactive_renders;
  static const int kLinkFieldNumber = 63;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::LinkState_LinkDescription >, 11, false >
    link;
  static const int kExceptionPropertyFieldNumber = 64;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false >
    exception_property;
  // @@protoc_insertion_point(class_scope:paraview_protobuf.LinkState)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static LinkState* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT MousePointer : public ::google::protobuf::Message {
 public:
  MousePointer();
  virtual ~MousePointer();
  
  MousePointer(const MousePointer& from);
  
  inline MousePointer& operator=(const MousePointer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MousePointer& default_instance();
  
  void Swap(MousePointer* other);
  
  // implements Message ----------------------------------------------
  
  MousePointer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MousePointer& from);
  void MergeFrom(const MousePointer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MousePointer_Ratio Ratio;
  static const Ratio BOTH = MousePointer_Ratio_BOTH;
  static const Ratio HEIGHT = MousePointer_Ratio_HEIGHT;
  static const Ratio WIDTH = MousePointer_Ratio_WIDTH;
  static inline bool Ratio_IsValid(int value) {
    return MousePointer_Ratio_IsValid(value);
  }
  static const Ratio Ratio_MIN =
    MousePointer_Ratio_Ratio_MIN;
  static const Ratio Ratio_MAX =
    MousePointer_Ratio_Ratio_MAX;
  static const int Ratio_ARRAYSIZE =
    MousePointer_Ratio_Ratio_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Ratio_descriptor() {
    return MousePointer_Ratio_descriptor();
  }
  static inline const ::std::string& Ratio_Name(Ratio value) {
    return MousePointer_Ratio_Name(value);
  }
  static inline bool Ratio_Parse(const ::std::string& name,
      Ratio* value) {
    return MousePointer_Ratio_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  static const int kViewFieldNumber = 70;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
    view;
  static const int kXFieldNumber = 71;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1, false >
    x;
  static const int kYFieldNumber = 72;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1, false >
    y;
  static const int kForceShowFieldNumber = 73;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
    forceShow;
  static const int kRatioTypeFieldNumber = 74;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::EnumTypeTraits< ::paraview_protobuf::MousePointer_Ratio, ::paraview_protobuf::MousePointer_Ratio_IsValid>, 14, false >
    ratioType;
  // @@protoc_insertion_point(class_scope:paraview_protobuf.MousePointer)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MousePointer* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT ChartViewBounds : public ::google::protobuf::Message {
 public:
  ChartViewBounds();
  virtual ~ChartViewBounds();
  
  ChartViewBounds(const ChartViewBounds& from);
  
  inline ChartViewBounds& operator=(const ChartViewBounds& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChartViewBounds& default_instance();
  
  void Swap(ChartViewBounds* other);
  
  // implements Message ----------------------------------------------
  
  ChartViewBounds* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChartViewBounds& from);
  void MergeFrom(const ChartViewBounds& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  static const int kViewFieldNumber = 75;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
    view;
  static const int kRangeFieldNumber = 76;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, false >
    range;
  // @@protoc_insertion_point(class_scope:paraview_protobuf.ChartViewBounds)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ChartViewBounds* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT ClientsInformation_ClientInfo : public ::google::protobuf::Message {
 public:
  ClientsInformation_ClientInfo();
  virtual ~ClientsInformation_ClientInfo();
  
  ClientsInformation_ClientInfo(const ClientsInformation_ClientInfo& from);
  
  inline ClientsInformation_ClientInfo& operator=(const ClientsInformation_ClientInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientsInformation_ClientInfo& default_instance();
  
  void Swap(ClientsInformation_ClientInfo* other);
  
  // implements Message ----------------------------------------------
  
  ClientsInformation_ClientInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientsInformation_ClientInfo& from);
  void MergeFrom(const ClientsInformation_ClientInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 user = 1;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 1;
  inline ::google::protobuf::uint32 user() const;
  inline void set_user(::google::protobuf::uint32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional bool is_master = 3 [default = false];
  inline bool has_is_master() const;
  inline void clear_is_master();
  static const int kIsMasterFieldNumber = 3;
  inline bool is_master() const;
  inline void set_is_master(bool value);
  
  // optional bool follow_cam = 4 [default = false];
  inline bool has_follow_cam() const;
  inline void clear_follow_cam();
  static const int kFollowCamFieldNumber = 4;
  inline bool follow_cam() const;
  inline void set_follow_cam(bool value);
  
  // @@protoc_insertion_point(class_scope:paraview_protobuf.ClientsInformation.ClientInfo)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 user_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  bool is_master_;
  bool follow_cam_;
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ClientsInformation_ClientInfo* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT ClientsInformation : public ::google::protobuf::Message {
 public:
  ClientsInformation();
  virtual ~ClientsInformation();
  
  ClientsInformation(const ClientsInformation& from);
  
  inline ClientsInformation& operator=(const ClientsInformation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientsInformation& default_instance();
  
  void Swap(ClientsInformation* other);
  
  // implements Message ----------------------------------------------
  
  ClientsInformation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientsInformation& from);
  void MergeFrom(const ClientsInformation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ClientsInformation_ClientInfo ClientInfo;
  
  // accessors -------------------------------------------------------
  
  static const int kUserFieldNumber = 80;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::paraview_protobuf::ClientsInformation_ClientInfo >, 11, false >
    user;
  // @@protoc_insertion_point(class_scope:paraview_protobuf.ClientsInformation)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ClientsInformation* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT ChatMessage : public ::google::protobuf::Message {
 public:
  ChatMessage();
  virtual ~ChatMessage();
  
  ChatMessage(const ChatMessage& from);
  
  inline ChatMessage& operator=(const ChatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatMessage& default_instance();
  
  void Swap(ChatMessage* other);
  
  // implements Message ----------------------------------------------
  
  ChatMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatMessage& from);
  void MergeFrom(const ChatMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  static const int kAuthorFieldNumber = 84;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
    author;
  static const int kTxtFieldNumber = 85;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::StringTypeTraits, 9, false >
    txt;
  // @@protoc_insertion_point(class_scope:paraview_protobuf.ChatMessage)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ChatMessage* default_instance_;
};
// -------------------------------------------------------------------

class VTKPVSERVERIMPLEMENTATIONCORE_EXPORT QtEvent : public ::google::protobuf::Message {
 public:
  QtEvent();
  virtual ~QtEvent();
  
  QtEvent(const QtEvent& from);
  
  inline QtEvent& operator=(const QtEvent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QtEvent& default_instance();
  
  void Swap(QtEvent* other);
  
  // implements Message ----------------------------------------------
  
  QtEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QtEvent& from);
  void MergeFrom(const QtEvent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef QtEvent_QtEventType QtEventType;
  static const QtEventType CHAT = QtEvent_QtEventType_CHAT;
  static const QtEventType OTHER = QtEvent_QtEventType_OTHER;
  static inline bool QtEventType_IsValid(int value) {
    return QtEvent_QtEventType_IsValid(value);
  }
  static const QtEventType QtEventType_MIN =
    QtEvent_QtEventType_QtEventType_MIN;
  static const QtEventType QtEventType_MAX =
    QtEvent_QtEventType_QtEventType_MAX;
  static const int QtEventType_ARRAYSIZE =
    QtEvent_QtEventType_QtEventType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  QtEventType_descriptor() {
    return QtEvent_QtEventType_descriptor();
  }
  static inline const ::std::string& QtEventType_Name(QtEventType value) {
    return QtEvent_QtEventType_Name(value);
  }
  static inline bool QtEventType_Parse(const ::std::string& name,
      QtEventType* value) {
    return QtEvent_QtEventType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  static const int kTypeFieldNumber = 98;
  static ::google::protobuf::internal::ExtensionIdentifier< ::paraview_protobuf::Message,
      ::google::protobuf::internal::EnumTypeTraits< ::paraview_protobuf::QtEvent_QtEventType, ::paraview_protobuf::QtEvent_QtEventType_IsValid>, 14, false >
    type;
  // @@protoc_insertion_point(class_scope:paraview_protobuf.QtEvent)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void VTKPVSERVERIMPLEMENTATIONCORE_EXPORT protobuf_AddDesc_vtkPVMessage_2eproto();
  friend void protobuf_AssignDesc_vtkPVMessage_2eproto();
  friend void protobuf_ShutdownFile_vtkPVMessage_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static QtEvent* default_instance_;
};
// ===================================================================


// ===================================================================

// Variant

// required .paraview_protobuf.Variant.Type type = 1;
inline bool Variant::has_type() const {
  return _has_bit(0);
}
inline void Variant::clear_type() {
  type_ = 0;
  _clear_bit(0);
}
inline ::paraview_protobuf::Variant_Type Variant::type() const {
  return static_cast< ::paraview_protobuf::Variant_Type >(type_);
}
inline void Variant::set_type(::paraview_protobuf::Variant_Type value) {
  GOOGLE_DCHECK(::paraview_protobuf::Variant_Type_IsValid(value));
  _set_bit(0);
  type_ = value;
}

// repeated sint64 idtype = 3;
inline int Variant::idtype_size() const {
  return idtype_.size();
}
inline void Variant::clear_idtype() {
  idtype_.Clear();
}
inline ::google::protobuf::int64 Variant::idtype(int index) const {
  return idtype_.Get(index);
}
inline void Variant::set_idtype(int index, ::google::protobuf::int64 value) {
  idtype_.Set(index, value);
}
inline void Variant::add_idtype(::google::protobuf::int64 value) {
  idtype_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Variant::idtype() const {
  return idtype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Variant::mutable_idtype() {
  return &idtype_;
}

// repeated sint32 integer = 4;
inline int Variant::integer_size() const {
  return integer_.size();
}
inline void Variant::clear_integer() {
  integer_.Clear();
}
inline ::google::protobuf::int32 Variant::integer(int index) const {
  return integer_.Get(index);
}
inline void Variant::set_integer(int index, ::google::protobuf::int32 value) {
  integer_.Set(index, value);
}
inline void Variant::add_integer(::google::protobuf::int32 value) {
  integer_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Variant::integer() const {
  return integer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Variant::mutable_integer() {
  return &integer_;
}

// repeated double float64 = 5;
inline int Variant::float64_size() const {
  return float64_.size();
}
inline void Variant::clear_float64() {
  float64_.Clear();
}
inline double Variant::float64(int index) const {
  return float64_.Get(index);
}
inline void Variant::set_float64(int index, double value) {
  float64_.Set(index, value);
}
inline void Variant::add_float64(double value) {
  float64_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
Variant::float64() const {
  return float64_;
}
inline ::google::protobuf::RepeatedField< double >*
Variant::mutable_float64() {
  return &float64_;
}

// repeated uint64 proxy_global_id = 6;
inline int Variant::proxy_global_id_size() const {
  return proxy_global_id_.size();
}
inline void Variant::clear_proxy_global_id() {
  proxy_global_id_.Clear();
}
inline ::google::protobuf::uint64 Variant::proxy_global_id(int index) const {
  return proxy_global_id_.Get(index);
}
inline void Variant::set_proxy_global_id(int index, ::google::protobuf::uint64 value) {
  proxy_global_id_.Set(index, value);
}
inline void Variant::add_proxy_global_id(::google::protobuf::uint64 value) {
  proxy_global_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Variant::proxy_global_id() const {
  return proxy_global_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Variant::mutable_proxy_global_id() {
  return &proxy_global_id_;
}

// repeated int32 port_number = 7;
inline int Variant::port_number_size() const {
  return port_number_.size();
}
inline void Variant::clear_port_number() {
  port_number_.Clear();
}
inline ::google::protobuf::int32 Variant::port_number(int index) const {
  return port_number_.Get(index);
}
inline void Variant::set_port_number(int index, ::google::protobuf::int32 value) {
  port_number_.Set(index, value);
}
inline void Variant::add_port_number(::google::protobuf::int32 value) {
  port_number_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Variant::port_number() const {
  return port_number_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Variant::mutable_port_number() {
  return &port_number_;
}

// repeated string txt = 8;
inline int Variant::txt_size() const {
  return txt_.size();
}
inline void Variant::clear_txt() {
  txt_.Clear();
}
inline const ::std::string& Variant::txt(int index) const {
  return txt_.Get(index);
}
inline ::std::string* Variant::mutable_txt(int index) {
  return txt_.Mutable(index);
}
inline void Variant::set_txt(int index, const ::std::string& value) {
  txt_.Mutable(index)->assign(value);
}
inline void Variant::set_txt(int index, const char* value) {
  txt_.Mutable(index)->assign(value);
}
inline void Variant::set_txt(int index, const char* value, size_t size) {
  txt_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Variant::add_txt() {
  return txt_.Add();
}
inline void Variant::add_txt(const ::std::string& value) {
  txt_.Add()->assign(value);
}
inline void Variant::add_txt(const char* value) {
  txt_.Add()->assign(value);
}
inline void Variant::add_txt(const char* value, size_t size) {
  txt_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Variant::txt() const {
  return txt_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Variant::mutable_txt() {
  return &txt_;
}

// repeated bytes binary = 9;
inline int Variant::binary_size() const {
  return binary_.size();
}
inline void Variant::clear_binary() {
  binary_.Clear();
}
inline const ::std::string& Variant::binary(int index) const {
  return binary_.Get(index);
}
inline ::std::string* Variant::mutable_binary(int index) {
  return binary_.Mutable(index);
}
inline void Variant::set_binary(int index, const ::std::string& value) {
  binary_.Mutable(index)->assign(value);
}
inline void Variant::set_binary(int index, const char* value) {
  binary_.Mutable(index)->assign(value);
}
inline void Variant::set_binary(int index, const void* value, size_t size) {
  binary_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Variant::add_binary() {
  return binary_.Add();
}
inline void Variant::add_binary(const ::std::string& value) {
  binary_.Add()->assign(value);
}
inline void Variant::add_binary(const char* value) {
  binary_.Add()->assign(value);
}
inline void Variant::add_binary(const void* value, size_t size) {
  binary_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Variant::binary() const {
  return binary_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Variant::mutable_binary() {
  return &binary_;
}

// -------------------------------------------------------------------

// VariantList

// repeated .paraview_protobuf.Variant variant = 1;
inline int VariantList::variant_size() const {
  return variant_.size();
}
inline void VariantList::clear_variant() {
  variant_.Clear();
}
inline const ::paraview_protobuf::Variant& VariantList::variant(int index) const {
  return variant_.Get(index);
}
inline ::paraview_protobuf::Variant* VariantList::mutable_variant(int index) {
  return variant_.Mutable(index);
}
inline ::paraview_protobuf::Variant* VariantList::add_variant() {
  return variant_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Variant >&
VariantList::variant() const {
  return variant_;
}
inline ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Variant >*
VariantList::mutable_variant() {
  return &variant_;
}

// -------------------------------------------------------------------

// MessageCollection

// repeated .paraview_protobuf.Message item = 1;
inline int MessageCollection::item_size() const {
  return item_.size();
}
inline void MessageCollection::clear_item() {
  item_.Clear();
}
inline const ::paraview_protobuf::Message& MessageCollection::item(int index) const {
  return item_.Get(index);
}
inline ::paraview_protobuf::Message* MessageCollection::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::paraview_protobuf::Message* MessageCollection::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Message >&
MessageCollection::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Message >*
MessageCollection::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// Message

// required uint64 global_id = 1;
inline bool Message::has_global_id() const {
  return _has_bit(0);
}
inline void Message::clear_global_id() {
  global_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 Message::global_id() const {
  return global_id_;
}
inline void Message::set_global_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  global_id_ = value;
}

// required uint32 location = 2;
inline bool Message::has_location() const {
  return _has_bit(1);
}
inline void Message::clear_location() {
  location_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 Message::location() const {
  return location_;
}
inline void Message::set_location(::google::protobuf::uint32 value) {
  _set_bit(1);
  location_ = value;
}

// optional bool share_only = 3 [default = false];
inline bool Message::has_share_only() const {
  return _has_bit(2);
}
inline void Message::clear_share_only() {
  share_only_ = false;
  _clear_bit(2);
}
inline bool Message::share_only() const {
  return share_only_;
}
inline void Message::set_share_only(bool value) {
  _set_bit(2);
  share_only_ = value;
}

// optional bool req_def = 4 [default = false];
inline bool Message::has_req_def() const {
  return _has_bit(3);
}
inline void Message::clear_req_def() {
  req_def_ = false;
  _clear_bit(3);
}
inline bool Message::req_def() const {
  return req_def_;
}
inline void Message::set_req_def(bool value) {
  _set_bit(3);
  req_def_ = value;
}

// optional uint32 client_id = 5 [default = 0];
inline bool Message::has_client_id() const {
  return _has_bit(4);
}
inline void Message::clear_client_id() {
  client_id_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 Message::client_id() const {
  return client_id_;
}
inline void Message::set_client_id(::google::protobuf::uint32 value) {
  _set_bit(4);
  client_id_ = value;
}

// -------------------------------------------------------------------

// DefinitionHeader

// -------------------------------------------------------------------

// ProxyState_SubProxy

// required string name = 1;
inline bool ProxyState_SubProxy::has_name() const {
  return _has_bit(0);
}
inline void ProxyState_SubProxy::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ProxyState_SubProxy::name() const {
  return *name_;
}
inline void ProxyState_SubProxy::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProxyState_SubProxy::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProxyState_SubProxy::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProxyState_SubProxy::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// required uint32 global_id = 2;
inline bool ProxyState_SubProxy::has_global_id() const {
  return _has_bit(1);
}
inline void ProxyState_SubProxy::clear_global_id() {
  global_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 ProxyState_SubProxy::global_id() const {
  return global_id_;
}
inline void ProxyState_SubProxy::set_global_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  global_id_ = value;
}

// -------------------------------------------------------------------

// ProxyState_Annotation

// required string key = 1;
inline bool ProxyState_Annotation::has_key() const {
  return _has_bit(0);
}
inline void ProxyState_Annotation::clear_key() {
  if (key_ != &_default_key_) {
    key_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ProxyState_Annotation::key() const {
  return *key_;
}
inline void ProxyState_Annotation::set_key(const ::std::string& value) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void ProxyState_Annotation::set_key(const char* value) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void ProxyState_Annotation::set_key(const char* value, size_t size) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProxyState_Annotation::mutable_key() {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  return key_;
}

// required string value = 2;
inline bool ProxyState_Annotation::has_value() const {
  return _has_bit(1);
}
inline void ProxyState_Annotation::clear_value() {
  if (value_ != &_default_value_) {
    value_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& ProxyState_Annotation::value() const {
  return *value_;
}
inline void ProxyState_Annotation::set_value(const ::std::string& value) {
  _set_bit(1);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void ProxyState_Annotation::set_value(const char* value) {
  _set_bit(1);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void ProxyState_Annotation::set_value(const char* value, size_t size) {
  _set_bit(1);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProxyState_Annotation::mutable_value() {
  _set_bit(1);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  return value_;
}

// -------------------------------------------------------------------

// ProxyState_UserData

// required string key = 1;
inline bool ProxyState_UserData::has_key() const {
  return _has_bit(0);
}
inline void ProxyState_UserData::clear_key() {
  if (key_ != &_default_key_) {
    key_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ProxyState_UserData::key() const {
  return *key_;
}
inline void ProxyState_UserData::set_key(const ::std::string& value) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void ProxyState_UserData::set_key(const char* value) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void ProxyState_UserData::set_key(const char* value, size_t size) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProxyState_UserData::mutable_key() {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  return key_;
}

// repeated .paraview_protobuf.Variant variant = 2;
inline int ProxyState_UserData::variant_size() const {
  return variant_.size();
}
inline void ProxyState_UserData::clear_variant() {
  variant_.Clear();
}
inline const ::paraview_protobuf::Variant& ProxyState_UserData::variant(int index) const {
  return variant_.Get(index);
}
inline ::paraview_protobuf::Variant* ProxyState_UserData::mutable_variant(int index) {
  return variant_.Mutable(index);
}
inline ::paraview_protobuf::Variant* ProxyState_UserData::add_variant() {
  return variant_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Variant >&
ProxyState_UserData::variant() const {
  return variant_;
}
inline ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::Variant >*
ProxyState_UserData::mutable_variant() {
  return &variant_;
}

// -------------------------------------------------------------------

// ProxyState_Property

// required string name = 1;
inline bool ProxyState_Property::has_name() const {
  return _has_bit(0);
}
inline void ProxyState_Property::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ProxyState_Property::name() const {
  return *name_;
}
inline void ProxyState_Property::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProxyState_Property::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProxyState_Property::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProxyState_Property::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional .paraview_protobuf.Variant value = 2;
inline bool ProxyState_Property::has_value() const {
  return _has_bit(1);
}
inline void ProxyState_Property::clear_value() {
  if (value_ != NULL) value_->::paraview_protobuf::Variant::Clear();
  _clear_bit(1);
}
inline const ::paraview_protobuf::Variant& ProxyState_Property::value() const {
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::paraview_protobuf::Variant* ProxyState_Property::mutable_value() {
  _set_bit(1);
  if (value_ == NULL) value_ = new ::paraview_protobuf::Variant;
  return value_;
}

// repeated .paraview_protobuf.ProxyState.UserData user_data = 3;
inline int ProxyState_Property::user_data_size() const {
  return user_data_.size();
}
inline void ProxyState_Property::clear_user_data() {
  user_data_.Clear();
}
inline const ::paraview_protobuf::ProxyState_UserData& ProxyState_Property::user_data(int index) const {
  return user_data_.Get(index);
}
inline ::paraview_protobuf::ProxyState_UserData* ProxyState_Property::mutable_user_data(int index) {
  return user_data_.Mutable(index);
}
inline ::paraview_protobuf::ProxyState_UserData* ProxyState_Property::add_user_data() {
  return user_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::ProxyState_UserData >&
ProxyState_Property::user_data() const {
  return user_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::paraview_protobuf::ProxyState_UserData >*
ProxyState_Property::mutable_user_data() {
  return &user_data_;
}

// -------------------------------------------------------------------

// ProxyState

// -------------------------------------------------------------------

// PXMRegistrationState_Entry

// optional string group = 1;
inline bool PXMRegistrationState_Entry::has_group() const {
  return _has_bit(0);
}
inline void PXMRegistrationState_Entry::clear_group() {
  if (group_ != &_default_group_) {
    group_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PXMRegistrationState_Entry::group() const {
  return *group_;
}
inline void PXMRegistrationState_Entry::set_group(const ::std::string& value) {
  _set_bit(0);
  if (group_ == &_default_group_) {
    group_ = new ::std::string;
  }
  group_->assign(value);
}
inline void PXMRegistrationState_Entry::set_group(const char* value) {
  _set_bit(0);
  if (group_ == &_default_group_) {
    group_ = new ::std::string;
  }
  group_->assign(value);
}
inline void PXMRegistrationState_Entry::set_group(const char* value, size_t size) {
  _set_bit(0);
  if (group_ == &_default_group_) {
    group_ = new ::std::string;
  }
  group_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PXMRegistrationState_Entry::mutable_group() {
  _set_bit(0);
  if (group_ == &_default_group_) {
    group_ = new ::std::string;
  }
  return group_;
}

// required string name = 2;
inline bool PXMRegistrationState_Entry::has_name() const {
  return _has_bit(1);
}
inline void PXMRegistrationState_Entry::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PXMRegistrationState_Entry::name() const {
  return *name_;
}
inline void PXMRegistrationState_Entry::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PXMRegistrationState_Entry::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PXMRegistrationState_Entry::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PXMRegistrationState_Entry::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// required uint64 global_id = 3;
inline bool PXMRegistrationState_Entry::has_global_id() const {
  return _has_bit(2);
}
inline void PXMRegistrationState_Entry::clear_global_id() {
  global_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 PXMRegistrationState_Entry::global_id() const {
  return global_id_;
}
inline void PXMRegistrationState_Entry::set_global_id(::google::protobuf::uint64 value) {
  _set_bit(2);
  global_id_ = value;
}

// -------------------------------------------------------------------

// PXMRegistrationState

// -------------------------------------------------------------------

// ProxyDefinitionState_ProxyXMLDefinition

// required string group = 1;
inline bool ProxyDefinitionState_ProxyXMLDefinition::has_group() const {
  return _has_bit(0);
}
inline void ProxyDefinitionState_ProxyXMLDefinition::clear_group() {
  if (group_ != &_default_group_) {
    group_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ProxyDefinitionState_ProxyXMLDefinition::group() const {
  return *group_;
}
inline void ProxyDefinitionState_ProxyXMLDefinition::set_group(const ::std::string& value) {
  _set_bit(0);
  if (group_ == &_default_group_) {
    group_ = new ::std::string;
  }
  group_->assign(value);
}
inline void ProxyDefinitionState_ProxyXMLDefinition::set_group(const char* value) {
  _set_bit(0);
  if (group_ == &_default_group_) {
    group_ = new ::std::string;
  }
  group_->assign(value);
}
inline void ProxyDefinitionState_ProxyXMLDefinition::set_group(const char* value, size_t size) {
  _set_bit(0);
  if (group_ == &_default_group_) {
    group_ = new ::std::string;
  }
  group_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProxyDefinitionState_ProxyXMLDefinition::mutable_group() {
  _set_bit(0);
  if (group_ == &_default_group_) {
    group_ = new ::std::string;
  }
  return group_;
}

// required string name = 2;
inline bool ProxyDefinitionState_ProxyXMLDefinition::has_name() const {
  return _has_bit(1);
}
inline void ProxyDefinitionState_ProxyXMLDefinition::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& ProxyDefinitionState_ProxyXMLDefinition::name() const {
  return *name_;
}
inline void ProxyDefinitionState_ProxyXMLDefinition::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProxyDefinitionState_ProxyXMLDefinition::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProxyDefinitionState_ProxyXMLDefinition::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProxyDefinitionState_ProxyXMLDefinition::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// required string xml = 3;
inline bool ProxyDefinitionState_ProxyXMLDefinition::has_xml() const {
  return _has_bit(2);
}
inline void ProxyDefinitionState_ProxyXMLDefinition::clear_xml() {
  if (xml_ != &_default_xml_) {
    xml_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& ProxyDefinitionState_ProxyXMLDefinition::xml() const {
  return *xml_;
}
inline void ProxyDefinitionState_ProxyXMLDefinition::set_xml(const ::std::string& value) {
  _set_bit(2);
  if (xml_ == &_default_xml_) {
    xml_ = new ::std::string;
  }
  xml_->assign(value);
}
inline void ProxyDefinitionState_ProxyXMLDefinition::set_xml(const char* value) {
  _set_bit(2);
  if (xml_ == &_default_xml_) {
    xml_ = new ::std::string;
  }
  xml_->assign(value);
}
inline void ProxyDefinitionState_ProxyXMLDefinition::set_xml(const char* value, size_t size) {
  _set_bit(2);
  if (xml_ == &_default_xml_) {
    xml_ = new ::std::string;
  }
  xml_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProxyDefinitionState_ProxyXMLDefinition::mutable_xml() {
  _set_bit(2);
  if (xml_ == &_default_xml_) {
    xml_ = new ::std::string;
  }
  return xml_;
}

// -------------------------------------------------------------------

// ProxyDefinitionState

// -------------------------------------------------------------------

// PullRequest

// -------------------------------------------------------------------

// ProxySelectionModelState

// -------------------------------------------------------------------

// LinkState_LinkDescription

// required uint32 proxy = 1;
inline bool LinkState_LinkDescription::has_proxy() const {
  return _has_bit(0);
}
inline void LinkState_LinkDescription::clear_proxy() {
  proxy_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 LinkState_LinkDescription::proxy() const {
  return proxy_;
}
inline void LinkState_LinkDescription::set_proxy(::google::protobuf::uint32 value) {
  _set_bit(0);
  proxy_ = value;
}

// optional string property_name = 2;
inline bool LinkState_LinkDescription::has_property_name() const {
  return _has_bit(1);
}
inline void LinkState_LinkDescription::clear_property_name() {
  if (property_name_ != &_default_property_name_) {
    property_name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& LinkState_LinkDescription::property_name() const {
  return *property_name_;
}
inline void LinkState_LinkDescription::set_property_name(const ::std::string& value) {
  _set_bit(1);
  if (property_name_ == &_default_property_name_) {
    property_name_ = new ::std::string;
  }
  property_name_->assign(value);
}
inline void LinkState_LinkDescription::set_property_name(const char* value) {
  _set_bit(1);
  if (property_name_ == &_default_property_name_) {
    property_name_ = new ::std::string;
  }
  property_name_->assign(value);
}
inline void LinkState_LinkDescription::set_property_name(const char* value, size_t size) {
  _set_bit(1);
  if (property_name_ == &_default_property_name_) {
    property_name_ = new ::std::string;
  }
  property_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LinkState_LinkDescription::mutable_property_name() {
  _set_bit(1);
  if (property_name_ == &_default_property_name_) {
    property_name_ = new ::std::string;
  }
  return property_name_;
}

// required .paraview_protobuf.LinkState.LinkDescription.Direction direction = 3;
inline bool LinkState_LinkDescription::has_direction() const {
  return _has_bit(2);
}
inline void LinkState_LinkDescription::clear_direction() {
  direction_ = 0;
  _clear_bit(2);
}
inline ::paraview_protobuf::LinkState_LinkDescription_Direction LinkState_LinkDescription::direction() const {
  return static_cast< ::paraview_protobuf::LinkState_LinkDescription_Direction >(direction_);
}
inline void LinkState_LinkDescription::set_direction(::paraview_protobuf::LinkState_LinkDescription_Direction value) {
  GOOGLE_DCHECK(::paraview_protobuf::LinkState_LinkDescription_Direction_IsValid(value));
  _set_bit(2);
  direction_ = value;
}

// -------------------------------------------------------------------

// LinkState

// -------------------------------------------------------------------

// MousePointer

// -------------------------------------------------------------------

// ChartViewBounds

// -------------------------------------------------------------------

// ClientsInformation_ClientInfo

// required uint32 user = 1;
inline bool ClientsInformation_ClientInfo::has_user() const {
  return _has_bit(0);
}
inline void ClientsInformation_ClientInfo::clear_user() {
  user_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ClientsInformation_ClientInfo::user() const {
  return user_;
}
inline void ClientsInformation_ClientInfo::set_user(::google::protobuf::uint32 value) {
  _set_bit(0);
  user_ = value;
}

// optional string name = 2;
inline bool ClientsInformation_ClientInfo::has_name() const {
  return _has_bit(1);
}
inline void ClientsInformation_ClientInfo::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& ClientsInformation_ClientInfo::name() const {
  return *name_;
}
inline void ClientsInformation_ClientInfo::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ClientsInformation_ClientInfo::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ClientsInformation_ClientInfo::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientsInformation_ClientInfo::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional bool is_master = 3 [default = false];
inline bool ClientsInformation_ClientInfo::has_is_master() const {
  return _has_bit(2);
}
inline void ClientsInformation_ClientInfo::clear_is_master() {
  is_master_ = false;
  _clear_bit(2);
}
inline bool ClientsInformation_ClientInfo::is_master() const {
  return is_master_;
}
inline void ClientsInformation_ClientInfo::set_is_master(bool value) {
  _set_bit(2);
  is_master_ = value;
}

// optional bool follow_cam = 4 [default = false];
inline bool ClientsInformation_ClientInfo::has_follow_cam() const {
  return _has_bit(3);
}
inline void ClientsInformation_ClientInfo::clear_follow_cam() {
  follow_cam_ = false;
  _clear_bit(3);
}
inline bool ClientsInformation_ClientInfo::follow_cam() const {
  return follow_cam_;
}
inline void ClientsInformation_ClientInfo::set_follow_cam(bool value) {
  _set_bit(3);
  follow_cam_ = value;
}

// -------------------------------------------------------------------

// ClientsInformation

// -------------------------------------------------------------------

// ChatMessage

// -------------------------------------------------------------------

// QtEvent


// @@protoc_insertion_point(namespace_scope)

}  // namespace paraview_protobuf

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::paraview_protobuf::Variant_Type>() {
  return ::paraview_protobuf::Variant_Type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::paraview_protobuf::LinkState_LinkDescription_Direction>() {
  return ::paraview_protobuf::LinkState_LinkDescription_Direction_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::paraview_protobuf::MousePointer_Ratio>() {
  return ::paraview_protobuf::MousePointer_Ratio_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::paraview_protobuf::QtEvent_QtEventType>() {
  return ::paraview_protobuf::QtEvent_QtEventType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vtkPVMessage_2eproto__INCLUDED
